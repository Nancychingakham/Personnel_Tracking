{
  "entityType" : "DASHBOARD",
  "entity" : {
    "title" : "Personnel Tracking",
    "image" : "tb-image;/api/images/system/smart-irrigation.jpg",
    "mobileHide" : false,
    "mobileOrder" : null,
    "configuration" : {
      "description" : "",
      "widgets" : {
        "8ce15aad-9ab2-55ce-2628-a663814d27b1" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 6.5,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1667907617961,
                  "endTimeMs" : 1667994017961
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "entitiesTitle" : "Zones",
              "enableSearch" : true,
              "enableSelectColumnDisplay" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "showCellActionsMenu" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityName" : false,
              "entityNameColumnTitle" : "",
              "displayEntityLabel" : false,
              "entityLabelColumnTitle" : "",
              "displayEntityType" : false,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "pageStepCount" : 3,
              "pageStepIncrement" : 10,
              "defaultSortOrder" : "Name",
              "useRowStyleFunction" : false,
              "rowStyleFunction" : ""
            },
            "title" : "Zones",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "cd737d26-3068-aae0-d370-c93f8e7e1a00",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "name",
                "type" : "entityField",
                "label" : "Zone",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "30%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.7231686834210371,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "label",
                "type" : "entityField",
                "label" : "Department",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "30%",
                  "useCellStyleFunction" : true,
                  "cellStyleFunction" : "return {\n    fontWeight: 600\n};",
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value ? '<span style=\"background: rgba(111, 116, 242, 0.08); border-radius: 16px; padding: 4px 8px; color: #5553AF;\">'+value+'</span>' : '';",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.7427597097428846,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "cropType",
                "type" : "attribute",
                "label" : "Theme",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "20%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.45735173845667054,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "avgMoisture",
                "type" : "timeseries",
                "label" : "Occupancy Rate",
                "color" : "#f44336",
                "settings" : {
                  "customTitle" : "",
                  "columnWidth" : "20%",
                  "useCellStyleFunction" : true,
                  "cellStyleFunction" : "return {\n    width: '1%'\n}",
                  "useCellContentFunction" : true,
                  "useCellContentFunctionOnExport" : true,
                  "cellContentFunction" : "if (value) {\n    var minMoistureThreshold = entity['minMoistureThreshold'];\n    var maxMoistureThreshold = entity['maxMoistureThreshold'];\n    var background = '111, 116, 242';\n    var textColor = '#5553AF';\n    if (value < minMoistureThreshold || value > maxMoistureThreshold) {\n        background = '209, 39, 48';\n        textColor = '#D12730';\n    }\n    var percent = value + '%';\n    var percentText = value.toFixed(0) + '%';\n    return '<div style=\"width: 100%; max-width: 100px; height: 16px; background: linear-gradient(to right, rgba('+background+', 0.16) '+percent+', rgba('+background+', 0.08) '+percent+'); border-radius: 5.21053px; line-height: normal;\"><span style=\"padding-left: 4px; font-weight: 600; font-size: 13px; color: '+textColor+';\">'+percentText+'</span></div>';\n} else {\n    return 'No data';\n}",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "disableSorting" : false
                },
                "_hash" : 0.017767185128356955,
                "aggregationType" : "NONE",
                "units" : "%",
                "decimals" : 0,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "minMoistureThreshold",
                "type" : "attribute",
                "label" : "minMoistureThreshold",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "disabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.5565658823011432,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "maxMoistureThreshold",
                "type" : "attribute",
                "label" : "maxMoistureThreshold",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "disabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.860782325530304,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "irrigationState",
                "type" : "attribute",
                "label" : "HVAC Status",
                "color" : "#8bc34a",
                "settings" : {
                  "customTitle" : "",
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "useCellContentFunctionOnExport" : true,
                  "cellContentFunction" : "var text = value === 'ON' ? 'Operational' : 'Offline';\r\nvar color = value === 'ON' ? '#198038' : 'red';\r\nvar animation = 'blinker 1s linear infinite';\r\n\r\nreturn `\r\n<div>\r\n  <style>\r\n    @keyframes blinker {\r\n      50% { opacity: 0.3; }\r\n    }\r\n  </style>\r\n  <span style=\"width: 8px; height: 8px; border-radius: 50%; background: ${color}; display: inline-block; vertical-align: middle; animation: ${animation};\"></span>\r\n  <span style=\"padding-left: 8px;\">${text}</span>\r\n</div>\r\n`;\r\n",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "disableSorting" : false
                },
                "_hash" : 0.20045276528792988,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "displayTimewindow" : true,
            "actions" : {
              "rowClick" : [ {
                "name" : "Zone details",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "field",
                "setEntityId" : true,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "9fac49b3-0e6b-9beb-56a7-6da9cec34984"
              } ],
              "headerButton" : [ ],
              "actionCellButton" : [ ]
            },
            "showTitleIcon" : false,
            "titleTooltip" : "",
            "enableDataExport" : false,
            "widgetStyle" : { },
            "widgetCss" : "mat-row {\n    cursor: pointer;\n}",
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "titleFont" : {
              "size" : 20,
              "sizeUnit" : "px",
              "family" : null,
              "weight" : "bold",
              "style" : "oblique"
            },
            "titleColor" : "#2F2E2E"
          },
          "row" : 0,
          "col" : 0,
          "id" : "8ce15aad-9ab2-55ce-2628-a663814d27b1",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "8fcd3aed-58d0-0cad-cf63-3a08e1be40a9" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 6.5,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1667907617961,
                  "endTimeMs" : 1667994017961
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "entitiesTitle" : "Sensors",
              "enableSearch" : true,
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "showCellActionsMenu" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityName" : false,
              "entityNameColumnTitle" : "",
              "displayEntityLabel" : false,
              "entityLabelColumnTitle" : "",
              "displayEntityType" : false,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "pageStepCount" : 3,
              "pageStepIncrement" : 10,
              "defaultSortOrder" : "label",
              "useRowStyleFunction" : false,
              "rowStyleFunction" : ""
            },
            "title" : "New Entities table",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "aa55618a-278a-0776-832d-fa1fe5769a2a",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "label",
                "type" : "entityField",
                "label" : "Label",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "60px",
                  "useCellStyleFunction" : true,
                  "cellStyleFunction" : "return {\n    fontWeight: 600\n};\n",
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value ? '<span style=\"background: rgba(111, 116, 242, 0.08); border-radius: 16px; padding: 4px 8px; color: #5553AF; white-space: nowrap;\">'+value+'</span>' : '';",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.5996920850265313,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "active",
                "type" : "attribute",
                "label" : "active",
                "color" : "#f44336",
                "settings" : {
                  "customTitle" : "",
                  "columnWidth" : "40px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "useCellContentFunctionOnExport" : true,
                  "cellContentFunction" : "const isActive = value === 'true';\r\nconst status = isActive ? 'Online' : 'Offline';\r\nconst baseColor = isActive ? '#10B981' : '#6B7280';\r\nconst pulseAnimation = isActive ? 'animation: pulse 2s infinite' : '';\r\n\r\nreturn '<style>@keyframes pulse { 0%, 100% { opacity: 1; } 50% { opacity: 0.5; } }</style>' +\r\n       '<div style=\"display:inline-flex;align-items:center;padding:6px 12px;border-radius:8px;background-color:' + (isActive ? '#ECFDF5' : '#F3F4F6') + '\">' +\r\n       '<div style=\"width:10px;height:10px;border-radius:50%;background-color:' + baseColor + ';margin-right:8px;' + pulseAnimation + '\"></div>' +\r\n       '<span style=\"font-size:13px;font-weight:500;color:' + baseColor + '\">' + status + '</span></div>';",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "disableSorting" : false
                },
                "_hash" : 0.49788361286301885,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "displayTimewindow" : true,
            "showTitleIcon" : false,
            "titleTooltip" : "",
            "enableDataExport" : false,
            "widgetStyle" : { },
            "widgetCss" : ".mat-mdc-header-row {\n    display: none;\n}\n\n.mat-mdc-row, .mat-mdc-cell {\n    border-bottom: none;\n    cursor: pointer;\n}\n\n.mdc-data-table__row:last-child .mdc-data-table__cell {\n    border-bottom: none;\n}\n",
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "actions" : {
              "headerButton" : [ {
                "name" : "Add  Sensor",
                "buttonType" : "icon",
                "icon" : "add",
                "buttonColor" : "rgba(0, 0, 0, 0.87)",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addSensorForm=\"ngForm\" [formGroup]=\"addSensorFormGroup\"\n      (ngSubmit)=\"submit()\" class=\"sf-sensor-form\">\n  <mat-toolbar class=\"flex flex-row\" color=\"primary\">\n    <h2>{{ step === 1 ? 'Add  sensor' : 'Set sensor location' }}</h2>\n    <span class=\"flex-1\"></span>\n    <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n  </mat-progress-bar>\n  <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n  <div mat-dialog-content class=\"flex flex-col\">\n    <section *ngIf=\"step === 1\" class=\"flex flex-col\">\n      <div class=\"flex flex-row gap-2 xs:flex-col xs:gap-0\">\n        <mat-form-field class=\"mat-block flex-1\">\n          <mat-label>Sensor Name</mat-label>\n          <input matInput formControlName=\"name\" required>\n          <mat-error *ngIf=\"addSensorFormGroup.get('name').hasError('required')\">\n            Sensor name is required.\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"mat-block flex-1\">\n          <mat-label>Label</mat-label>\n          <input matInput formControlName=\"label\">\n        </mat-form-field>\n      </div>\n    </section>\n    <section *ngIf=\"step === 2\" class=\"flex flex-col\">\n      <tb-dashboard-state\n          style=\"height: 400px; width: 100%;\"\n          [ctx]=\"widgetContext\"\n          stateId=\"setup_sensor_location\"\n          [entityId]=\"sensor.id\">\n      </tb-dashboard-state>\n    </section>\n  </div>\n  <div mat-dialog-actions class=\"flex flex-row items-center justify-end\">\n    <button *ngIf=\"step === 1\" mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button *ngIf=\"step === 1\" mat-button mat-raised-button color=\"primary\"\n            type=\"button\"\n            (click)=\"next()\"\n            [disabled]=\"(isLoading$ | async) || addSensorFormGroup.invalid\">\n      Next\n    </button>\n    <button *ngIf=\"step === 2\" mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"back()\" cdkFocusInitial>\n      Back\n    </button>\n    <button *ngIf=\"step === 2\" mat-button mat-raised-button color=\"primary\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || addSensorFormGroup.invalid || !hasLocation\">\n      Create\n    </button>\n  </div>\n</form>\n",
                "customCss" : ".sf-sensor-form {\n    width: 600px;\n}\n\n.sf-sensor-form .mat-toolbar.mat-primary {\n    background: #fff;\n    color: rgba(0, 0, 0, 0.87);\n}\n\n.sf-sensor-form .mat-mdc-button.mat-primary:not(:disabled), .sf-sensor-form .mat-mdc-icon-button.mat-primary:not(:disabled), .sf-sensor-form .mat-mdc-outlined-button.mat-primary:not(:disabled) {\n    color: #5553AF;\n}\n\n.sf-sensor-form .mat-mdc-fab.mat-primary:not(:disabled), .sf-sensor-form .mat-mdc-unelevated-button.mat-primary:not(:disabled), .sf-sensor-form .mat-mdc-mini-fab.mat-primary:not(:disabled), .sf-sensor-form .mat-mdc-raised-button.mat-primary:not(:disabled) {\n    color: #fff;\n}\n\n.sf-sensor-form .mat-mdc-fab.mat-primary:not(:disabled), .sf-sensor-form .mat-mdc-unelevated-button.mat-primary:not(:disabled), .sf-sensor-form .mat-mdc-mini-fab.mat-primary:not(:disabled), .sf-sensor-form .mat-mdc-raised-button.mat-primary:not(:disabled) {\n    background-color: #6F74F2;\n}\n\n.sf-sensor-form .mat-mdc-button .mat-mdc-button-persistent-ripple::before, .sf-sensor-form .mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before, .sf-sensor-form .mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before, .sf-sensor-form .mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before {\n    background-color: #6F74F2;\n}\n\n.sf-sensor-form .mat-mdc-form-field .mdc-text-field--focused .mdc-floating-label {\n    color: #5553AF;\n}\n\n.sf-sensor-form .mdc-text-field--filled .mdc-line-ripple::after {\n    border-bottom-color: #6F74F2;\n}\n\n.sf-sensor-form .mat-mdc-slide-toggle.mat-accent .mdc-switch.mdc-switch--selected.mdc-switch--checked .mdc-switch__handle::after, \n.sf-sensor-form .mat-mdc-slide-toggle.mat-accent .mdc-switch.mdc-switch--selected.mdc-switch--checked .mdc-switch__ripple::after, \n.sf-sensor-form .mat-mdc-slide-toggle.mat-accent .mdc-switch.mdc-switch--selected.mdc-switch--checked .mdc-switch__ripple::before {\n    background-color: #6F74F2 !important;\n}\n\n.sf-sensor-form .mat-mdc-slide-toggle.mat-accent .mdc-switch .mdc-switch__track::after {\n    background: rgba(111, 116, 242, 0.54) !important;\n}\n\n.sf-sensor-form .mat-datetimepicker-calendar-header {\n    background-color: #6F74F2;\n}\n\n.sf-sensor-form .mat-datetimepicker-calendar-body-cell-content.mat-datetimepicker-calendar-body-selected {\n    background-color: #6F74F2;\n}\n\n.sf-sensor-form .mat-datetimepicker-clock-cell.mat-datetimepicker-clock-cell-selected {\n    background-color: #8689f4;\n}\n\n.sf-sensor-form .mat-datetimepicker-clock-center, .sf-sensor-form .mat-datetimepicker-clock-hand, .sf-sensor-form .mat-datetimepicker-clock-hand:before {\n    background-color: #6F74F2;\n}\n\n.sf-sensor-form .mat-datetimepicker-calendar-body-cell-content.mat-datetimepicker-calendar-body-today:not(.mat-datetimepicker-calendar-body-selected) {\n    border-color: #6F74F2;\n}\n\n.sf-sensor-form .mat-icon {\n    color: #868D9C;\n}\n\n.sf-sensor-form .title-modal {\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 130%;\n    color: #868D9C;\n    padding-bottom: 8px;\n}\n\n.sf-sensor-form .mat-button-toggle-group-appearance-standard, .sf-sensor-form .mat-button-toggle-standalone.mat-button-toggle-appearance-standard {\n    border: none;\n}\n\n.sf-sensor-form .mat-button-toggle {\n    background: rgba(0, 0, 0, 0.06);\n    height: 32px;\n    align-items: center;\n    display: flex;\n}\n\n.sf-sensor-form .mat-button-toggle-checked .mat-button-toggle-button {\n    background-color: #fff;\n    border-radius: 4px;\n    margin-left: 2px;\n    margin-right: 2px;\n}\n\n.sf-sensor-form .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n    line-height: 28px;\n    font-size: 14px;\n}\n\n.sf-sensor-form .mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle {\n    border-left: none;\n}\n\n.sf-sensor-form .mat-button-toggle-checked.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay {\n    opacity: .01;\n}\n\n.sf-sensor-form .mat-mdc-button.weekly-repeat {\n    padding: 0 15px;\n    min-width: 0;\n}\n\n.sf-sensor-form .mat-mdc-button.weekly-repeat.no-border {\n    border: 1px solid #6F74F2;\n}\n\n.sf-sensor-form.mat-primary .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text {\n    color: #5553AF;\n}\n\n.sf-sensor-form .mat-mdc-slider .mdc-slider__thumb-knob,\n.sf-sensor-form .mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob,\n.sf-sensor-form .mat-mdc-slider .mdc-slider__value-indicator,\n.sf-sensor-form .mat-mdc-slider .mdc-slider__track--inactive {\n    background-color: #6F74F2;\n}\n\n.sf-sensor-form .mat-mdc-slider .mdc-slider__value-indicator::before {\n    border-top-color: #6F74F2;\n}\n\n.sf-sensor-form .mat-mdc-slider .mdc-slider__value-indicator {\n    opacity: 1;\n}\n\n.sf-sensor-form .mat-mdc-slider .mdc-slider__track--active_fill,\n.sf-sensor-form .mat-mdc-slider .mdc-slider__thumb-knob,\n.sf-sensor-form .mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob {\n    border-color: #6F74F2;\n}\n\n.sf-sensor-form .title-modal {\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 130%;\n    color: #868D9C;\n    padding-bottom: 8px;\n}\n\n.sf-sensor-form .threshold-value {\n    color: #fff;\n    font-weight: 500;\n    background: #6F74F2;\n    border-radius: 16px;\n    width: 32px;\n    height: 32px;\n    line-height: 32px;\n    text-align: center;\n}\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\nlet entityRelationService = $injector.get(widgetContext.servicesMap.get('entityRelationService'));\nlet entityGroupService = $injector.get(widgetContext.servicesMap.get('entityGroupService'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\n\nlet fieldId = widgetContext.stateController.getStateParams().entityId;\n\nopenAddSensorDialog();\n\nfunction openAddSensorDialog() {\n    customDialog.customDialog(htmlTemplate, AddSensorDialogController).subscribe();\n}\n\nfunction AddSensorDialogController(instance) {\n    let vm = instance;\n    \n    vm.widgetContext = widgetContext;\n    vm.step = 1;\n    vm.sensor = null;\n    \n    vm.hasLocation = false;\n    vm.locationSubscription = null;\n\n\n    vm.addSensorFormGroup = vm.fb.group({\n      name: ['', [vm.validators.required]],\n      label: [null]\n    });\n\n    vm.cancel = function() {\n        cancelLocationSubscription();\n        deleteEntityObservable().subscribe(\n            function () {\n                widgetContext.updateAliases();\n                vm.dialogRef.close(null);\n            }\n        );\n    };\n\n    vm.next = function() {\n        vm.addSensorFormGroup.markAsPristine();\n        saveEntityObservable().subscribe(\n            function (entity) {\n                const tasks = [saveAttributes(entity.id)];\n                if (!vm.sensor) {\n                    tasks.push(saveRelation(entity.id));\n                }\n                vm.sensor = entity;\n                widgetContext.rxjs.forkJoin(tasks).subscribe(\n                    function () {\n                        createLocationSubscription().subscribe(\n                            function() {\n                                vm.step = 2;\n                            }\n                        );\n                    }\n                );\n            }\n        );\n    };\n    \n    vm.back = function() {\n        cancelLocationSubscription();\n        vm.step = 1;\n    }\n    \n    vm.submit = function() {\n        cancelLocationSubscription();\n        widgetContext.updateAliases();\n        vm.dialogRef.close(null);\n    }\n    \n    \n    function createLocationSubscription() {\n        var subscriptionInfo = {\n            type: 'entity',\n            entityType: vm.sensor.id.entityType,\n            entityId: vm.sensor.id.id,\n            attributes: [{ name: 'latitude' }, {name: 'longitude'}]\n        };\n        var options = {\n            callbacks: {\n                onDataUpdated: function(subscription) {\n                    checkHasLocation(subscription.data);\n                }\n            }\n        };\n        return widgetContext.subscriptionApi.createSubscriptionFromInfo(\n                            'latest', [ subscriptionInfo ], options, false, true).pipe(\n            widgetContext.rxjs.tap(function(locationSubscription) {\n                vm.locationSubscription = locationSubscription;\n            })\n        );\n        \n    }\n    \n    function checkHasLocation(data) {\n        var hasLocation = false;\n        if (data.length === 2) {\n            var latitude, longitude;\n            for (var i = 0; i < data.length; i ++) {\n                var datasourceData = data[i];\n                if (datasourceData.dataKey.name === 'latitude') {\n                    latitude = datasourceData.data[0][1];\n                } else if (datasourceData.dataKey.name === 'longitude') {\n                    longitude = datasourceData.data[0][1];\n                }\n            }\n            if (isNumeric(latitude) && isNumeric(longitude)) {\n                hasLocation = true;\n            }\n        }\n        vm.hasLocation = hasLocation;\n    }\n    \n    function isNumeric(val) {\n        if (typeof val === \"number\") {\n            return true;\n        } else if (typeof val === \"string\") {\n            return !isNaN(val) && \n                !isNaN(parseFloat(val));\n        } else {\n            return false;\n        }\n    }\n    \n    function cancelLocationSubscription() {\n        if (vm.locationSubscription) {\n            widgetContext.subscriptionApi.removeSubscription(vm.locationSubscription.id);\n            vm.locationSubscription = null;\n        }\n    }\n\n    function saveEntityObservable() {\n        return getOrCreateSmartIrrigationDeviceGroup().pipe(\n          widgetContext.rxjs.switchMap((smartIrrigation) => {\n            const formValues = vm.addSensorFormGroup.value;\n            let sensor = {\n                name: formValues.name,\n                type: 'SI Soil Moisture Sensor',\n                label: formValues.label\n            };\n            if (vm.sensor) {\n                sensor.id = vm.sensor.id;\n            }\n            return deviceService.saveDevice(sensor, smartIrrigation.id.id);\n          })\n        );\n    }\n    \n    function deleteEntityObservable() {\n        if (vm.sensor) {\n            return deviceService.deleteDevice(vm.sensor.id.id);\n        } else {\n            return widgetContext.rxjs.of(null);\n        }\n    }\n\n    function saveAttributes(entityId) {\n        if (!vm.hasLocation) {\n            return attributeService.getEntityAttributes(fieldId, 'SERVER_SCOPE', ['perimeter']).pipe(\n                widgetContext.rxjs.mergeMap(function (attributes) {\n                    var polygon;\n                    if (attributes.length && attributes[0].key === 'perimeter') {\n                       polygon = attributes[0].value;\n                    }\n                    var latLng = calculatePolygonCenter(polygon);\n                    let attributesArray = [\n                        {key: 'latitude', value: latLng[0]},\n                        {key: 'longitude', value: latLng[1]}\n                    ];\n                    return attributeService.saveEntityAttributes(entityId, \"SERVER_SCOPE\", attributesArray);\n                })\n            );\n        } else {\n            return widgetContext.rxjs.of(null);\n        }\n    }\n    \n    function saveRelation(entityId) {\n        let relation = {\n            type: 'FieldToMoistureSensor',\n            typeGroup: 'COMMON',\n            to: entityId,\n            from: fieldId\n        };\n        return entityRelationService.saveRelation(relation);\n    }\n    \n    function getOrCreateSmartIrrigationDeviceGroup() {\n      return getEntityGroupByName(\"Smart Irrigation\", \"DEVICE\").pipe(\n          widgetContext.rxjs.switchMap((group) => {\n              if (group) {\n                  return widgetContext.rxjs.of(group);\n              } else {\n                  var smartIrrigation = {\n                    type: 'DEVICE',\n                    name: 'Smart Irrigation'\n                  };\n                  return entityGroupService.saveEntityGroup(smartIrrigation);\n              }\n          })\n      );\n    }\n    \n    function getEntityGroupByName(groupName, groupType) {\n      var entityGroupsPageLink = widgetContext.pageLink(10, 0, groupName);\n      return entityGroupService.getEntityGroupsByPageLink(entityGroupsPageLink, groupType, {ignoreLoading: true}).pipe(\n          widgetContext.rxjs.map((data) => {\n            if (data.data.length) {\n                return data.data.find((group) => group.name === groupName);\n            } else {\n                return null;\n            }\n          })\n      );\n    }\n    \n    function calculatePolygonCenter(polygon) {\n        if (polygon && Array.isArray(polygon)) {\n            var length = polygon.length;\n            var latSum = 0;\n            var lngSum = 0;\n            for (var i = 0; i < length; i ++) {\n                var polyLatLng = polygon[i];\n                latSum += polyLatLng[0];\n                lngSum += polyLatLng[1];\n            }\n            return [latSum / length, lngSum / length];\n        } else {\n            return [0,0];\n        }\n    }\n\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "e13b9c03-837f-8ae9-cc0c-7a0e9931b1e8"
              } ],
              "actionCellButton" : [ ],
              "rowClick" : [ {
                "name" : "Moisture sensor details",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "moisture_sensor_details",
                "setEntityId" : true,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "popoverPreferredPlacement" : "top",
                "popoverHideOnClickOutside" : true,
                "popoverHideDashboardToolbar" : true,
                "popoverWidth" : "400px",
                "popoverHeight" : "300px",
                "popoverStyle" : { },
                "openInSeparateDialog" : false,
                "openInPopover" : true,
                "id" : "548ad8b1-2a95-54f5-ffde-9d555e5a5832"
              } ]
            }
          },
          "row" : 0,
          "col" : 0,
          "id" : "8fcd3aed-58d0-0cad-cf63-3a08e1be40a9",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "1f66e5cb-041d-1a45-1abf-6f6ae3d91872" : {
          "type" : "latest",
          "sizeX" : 5,
          "sizeY" : 3.5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "61ca5437-6539-88f4-4f59-a9508eefdf1e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "photo",
                "type" : "attribute",
                "label" : "photo",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5868072448262106
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1668004676539,
                  "endTimeMs" : 1668091076539
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "useMarkdownTextFunction" : false,
              "markdownTextPattern" : "<div class=\"main-layout flex flex-col\" style=\"width: 100%;\">\r\n    <div class=\"flex flex-row justify-between items-center\" style=\"height: 160px; width: 100%;\">\r\n        <tb-dashboard-state \r\n            style=\"height: 160px; flex: 1;\"\r\n            [ctx]=\"ctx\"\r\n            stateId=\"moisture_sensor_details_brief\"\r\n            [entityId]=\"{ entityType: 'DEVICE', id: '${entityId}' }\"> \r\n        </tb-dashboard-state>\r\n        <div class='meter-photo' style=\"display: flex; align-items: center; justify-content: center;\">\r\n            <img src=\"${photo}\" style=\"max-height: 140px; max-width: 150px; object-fit: contain;\">\r\n        </div>\r\n    </div>\r\n    <mat-expansion-panel id=\"${entityId}\" class=\"tb-settings\" \r\n         (expandedChange)=\"showDetails = $event; ctx.popoverComponent?.resize($event ? '400px' : '300px', $event ? '570px' : '250px', 200)\">\r\n        <mat-expansion-panel-header class=\"flex flex-row flex-wrap\">\r\n            <mat-panel-description class=\"items-center justify-end\">\r\n                View details\r\n            </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n        <ng-template matExpansionPanelContent>\r\n            <div style=\"height: 80px; width: 100%;\">\r\n                <tb-dashboard-state \r\n                    *ngIf=\"showDetails\"\r\n                    style=\"height: 100%; width: 100%;\"\r\n                    [ctx]=\"ctx\"\r\n                    stateId=\"moisture_sensor_details_alarms\"\r\n                    [entityId]=\"{ entityType: 'DEVICE', id: '${entityId}' }\">\r\n                </tb-dashboard-state>\r\n            </div>\r\n            <div style=\"height: 200px; width: 100%;\">\r\n                <tb-dashboard-state \r\n                    *ngIf=\"showDetails\"\r\n                    style=\"height: 100%; width: 100%;\"\r\n                    [ctx]=\"ctx\"\r\n                    stateId=\"moisture_sensor_details_moisture\"\r\n                    [entityId]=\"{ entityType: 'DEVICE', id: '${entityId}' }\">\r\n                </tb-dashboard-state>\r\n            </div>\r\n        </ng-template>\r\n    </mat-expansion-panel>\r\n</div>",
              "markdownTextFunction" : "return '# Some title\\\\n - Entity name: ' + data[0]['entityName'];",
              "applyDefaultMarkdownStyle" : true,
              "markdownCss" : ".tb-markdown-view .tb-progress-cover, .tb-markdown-view .mat-drawer-container {\n    background-color: #fff !important;\n}\n\n.tb-markdown-view {\n    overflow: hidden !important;\n}\n\n.tb-markdown-view > div {\n    padding: 0;\n}\n"
            },
            "title" : "New Markdown/HTML Card",
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "showLegend" : false,
            "useDashboardTimewindow" : true,
            "enableDataExport" : false,
            "widgetCss" : ".tb-widget-container > .tb-widget {\n    border-radius: 0px;\n    box-shadow: none;\n}\n\n.tb-markdown-view .tb-progress-cover, .tb-markdown-view .mat-drawer-container {\n    background-color: #fff !important;\n}\n\n.mat-expansion-panel.tb-settings {\n    box-shadow: none;\n}\n\n.mat-expansion-panel.tb-settings .mat-content {\n    overflow: visible;\n}\n\n.mat-expansion-panel.tb-settings .mat-expansion-panel-header {\n    padding: 0;\n}\n\n.mat-expansion-panel.tb-settings .mat-expansion-panel-header:hover {\n    background: none;\n}\n\n.mat-expansion-panel.tb-settings .mat-expansion-panel-header .mat-expansion-indicator {\n    padding: 2px;\n}\n\n.mat-expansion-panel.tb-settings .mat-expansion-panel-header-description {\n    align-items: center;\n    font-weight: 600;\n    font-size: 13px;\n    margin-right: 8px;\n}\n\n.mat-expansion-panel.tb-settings .mat-expansion-panel-header .mat-expansion-indicator:after, .mat-expansion-panel.tb-settings .mat-expansion-panel-header-description {\n    color: #5553AF;\n}\n\n.mat-expansion-panel.tb-settings .mat-expansion-panel-header .mat-expansion-indicator {\n    padding: 0 2px;\n    font-size: 13px;\n}\n\n.mat-expansion-panel.tb-settings .mat-expansion-panel-header .mat-expansion-indicator:after {\n    vertical-align: baseline;\n}\n\n.mat-expansion-panel.tb-settings > .mat-expansion-panel-content > .mat-expansion-panel-body {\n    padding: 0;\n}\n\n.mat-expansion-panel .mat-expansion-panel-content { \n    font: inherit;\n}\n\ndiv.tb-widget .tb-timewindow.no-padding {\n    padding: 0 8px;\n    border: 1px solid rgba(0, 0, 0, 0.08);\n    border-radius: 8px;\n    color: #868D9C;\n    font-weight: 400;\n    font-size: 12px;\n}\n\n.tb-timewindow .mat-icon-button {\n    width: 18px;\n    line-height: 18px;\n    height: 18px;\n    margin-right: 4px;\n}\n\n.tb-timewindow .mat-icon-button .mat-icon {\n    width: 15px;\n    font-size: 15px;\n    line-height: 15px;\n    height: 15px;\n}",
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "displayTimewindow" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "1f66e5cb-041d-1a45-1abf-6f6ae3d91872",
          "typeFullFqn" : "system.cards.markdown_card"
        },
        "b5c71687-c799-9b94-00f1-958cf76f006c" : {
          "type" : "latest",
          "sizeX" : 5,
          "sizeY" : 3.5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "61ca5437-6539-88f4-4f59-a9508eefdf1e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "label",
                "type" : "entityField",
                "label" : "label",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.9633249686422383,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "moisture",
                "type" : "timeseries",
                "label" : "moisture",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.3069038474738244
              }, {
                "name" : "active",
                "type" : "attribute",
                "label" : "active",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.21255896609213454,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return value === 'true' ? 'Active' : 'Offline';"
              }, {
                "name" : "SeName",
                "type" : "attribute",
                "label" : "SeName",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.9849396513006161
              }, {
                "name" : "CurrentSection",
                "type" : "attribute",
                "label" : "CurrentSection",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.35186871223315497
              }, {
                "name" : "currentZone",
                "type" : "attribute",
                "label" : "currentZone",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.10544845313399032
              }, {
                "name" : "battery",
                "type" : "timeseries",
                "label" : "battery",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.4204261927915315
              }, {
                "name" : "name",
                "type" : "entityField",
                "label" : "Name",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.7089988456363326
              }, {
                "name" : "lastActive",
                "type" : "attribute",
                "label" : "lastActive",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.3377661750117039
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1668004676539,
                  "endTimeMs" : 1668091076539
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "useMarkdownTextFunction" : true,
              "markdownTextPattern" : "# Markdown/HTML card \\n - **Current entity**: **${entityName}**. \\n - **Current value**: **${Random}**.",
              "markdownTextFunction" : "var SeName = data[0]['SeName'] || 'Unnamed';\r\nvar label = data[0]['label'] || 'Unnamed';\r\nvar CurrentSection = data[0]['CurrentSection'] || 'N/A';\r\nvar lastActive = data[0]['lastActive'] || 'N/A';\r\nvar currentZone = data[0]['currentZone'] || 'Unknown';\r\nvar battery = data[0]['battery'] || 0;\r\nvar activeStatus = data[0]['active'] || 'inactive';\r\nvar statusClass = activeStatus.toLowerCase() === 'active' ? 'active' : 'inactive';\r\n\r\nvar initials = name.split(' ').map(n => n[0]).join('').toUpperCase();\r\n\r\nvar moistureTs = data[0]['moisture|ts'];\r\nvar lastSeen = 'N/A';\r\n\r\nif (moistureTs) {\r\n    var elapsed = new Date().getTime() - moistureTs;\r\n    var MIN = 60 * 1000;\r\n    var HOUR = 60 * MIN;\r\n    var DAY = 24 * HOUR;\r\n\r\n    if (elapsed >= DAY) {\r\n        lastSeen = \"~\" + Math.floor(elapsed / DAY) + \" day\";\r\n    } else if (elapsed >= HOUR) {\r\n        lastSeen = \"~\" + Math.floor(elapsed / HOUR) + \" hr\";\r\n    } else if (elapsed >= MIN) {\r\n        lastSeen = Math.floor(elapsed / MIN) + \" min ago\";\r\n    } else {\r\n        lastSeen = \"Just now\";\r\n    }\r\n}\r\n\r\nreturn `\r\n  <div style=\"margin-left: 16px; flex-grow: 1;\">\r\n    <div style=\"font-weight: 600; font-size: 16px;\">${SeName}</div>\r\n\r\n    <div style=\"display: flex; align-items: center; justify-content: space-between; font-size: 13px; color: gray;\">\r\n      <div>${label}</div>\r\n      <div style=\"background: ${statusClass === 'active' ? '#D4F8D4' : '#FAD4D4'};\r\n                  color: ${statusClass === 'active' ? '#2E7D32' : '#B71C1C'};\r\n                  font-weight: 500;\r\n                  font-size: 12px;\r\n                  padding: 2px 8px;\r\n                  border-radius: 6px;\r\n                  animation: pulse 1.5s infinite;\r\n                  margin-left: 12px;\">\r\n        ${activeStatus.toUpperCase()}\r\n      </div>\r\n    </div>\r\n\r\n   \r\n    <div style=\"margin-top: 8px; font-size: 14px; color: #555;\">\r\n      <div style=\"margin-bottom: 4px;\"><strong>Current Zone</strong> 📍: ${currentZone}</div>\r\n      <div style=\"margin-bottom: 4px;\"><strong>Current Aisle</strong> 📌: ${CurrentSection}</div>\r\n       <div style=\"margin-bottom: 4px;\"><strong>Last Active</strong> ⏰: ${lastActive}</div>\r\n      <div style=\"margin-bottom: 4px;\"><strong>Battery</strong> 🔋: ${battery}%</div>\r\n    </div>\r\n  </div>\r\n`;",
              "applyDefaultMarkdownStyle" : true,
              "markdownCss" : ".tb-markdown-view > div {\n    padding: 0;\n}\n\n.sensor-details .header {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.sensor-details .title {\n    font-weight: 500;\n    font-size: 16px;\n    padding-right: 8px;\n}\n\n.sensor-details .sensor-label {\n    font-weight: 600;\n    font-size: 13px;\n    line-height: 16px;\n    background: rgba(111, 116, 242, 0.08);\n    border-radius: 16px;\n    padding: 4px 8px;\n    color: #5553AF;   \n}\n\n.sensor-details .label {\n    font-weight: 400;\n    font-size: 12px;\n    color: #868D9C;\n    width: 145px;\n    padding-right: 24px;\n}\n\n.sensor-details .value {\n    font-weight: 600;\n    font-size: 13px;\n    color: rgba(0, 0, 0, 0.76);\n}\n\n.sensor-details .value .status {\n    display: inline-block;\n    vertical-align: middle;\n    width: 4px;\n    height: 4px;\n    border-radius: 2px;\n}\n\n.sensor-details .value .status.active {\n    background: #198038;\n}\n\n.sensor-details .value .status.inactive {\n    background: red;\n}\n .status-badge {\n        padding: 2px 6px;\n        border-radius: 6px;\n        font-weight: 500;\n        font-size: 12px;\n        animation: fadePulse 1.8s infinite;\n      }\n      .active {\n        background: #D4F8D4;\n        color: #2E7D32;\n      }\n      .inactive {\n        background: #FAD4D4;\n        color: #B71C1C;\n      }\n     @keyframes pulse {\n  0%, 100% { opacity: 1; }\n  50% { opacity: 0.6; }\n}\n\n"
            },
            "title" : "New Markdown/HTML Card",
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "showLegend" : false,
            "useDashboardTimewindow" : true,
            "enableDataExport" : false,
            "widgetCss" : ".tb-widget-container > .tb-widget {\n    border-radius: 0px;\n    box-shadow: none;\n}",
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "displayTimewindow" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "b5c71687-c799-9b94-00f1-958cf76f006c",
          "typeFullFqn" : "system.cards.markdown_card"
        },
        "fd1083dd-fad3-90c3-8eba-8a8fe0f1d93e" : {
          "type" : "latest",
          "sizeX" : 5,
          "sizeY" : 3.5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "39927380-423a-872a-0843-de34f99264ad",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "majorAlarmsCount",
                "type" : "attribute",
                "label" : "majorAlarmsCount",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3039588670801061
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1668004676539,
                  "endTimeMs" : 1668091076539
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "useMarkdownTextFunction" : true,
              "markdownTextPattern" : "# Markdown/HTML card \\n - **Current entity**: **${entityName}**. \\n - **Current value**: **${Random}**.",
              "markdownTextFunction" : "var criticalAlarmsCount = data[0]['criticalAlarmsCount'];\nvar majorAlarmsCount = data[0]['majorAlarmsCount'];\nif (criticalAlarmsCount) {\n    var text = \"Critical Alarm\";\n    if (criticalAlarmsCount > 1) {\n        text += \"s\";\n    }\n    return '<div class=\"alarms critical\"><div id=\"alarms\" class=\"alarm-card\"><mat-icon>error</mat-icon><span class=\"alarm-text\">' + criticalAlarmsCount + ' ' + text + '</span></div></div>';\n} else \nif (majorAlarmsCount) {\n    var text = \"Major Alarm\";\n    if (majorAlarmsCount > 1) {\n        text += \"s\";\n    }\n    return '<div class=\"alarms major\"><div id=\"alarms\" class=\"alarm-card\"><mat-icon>warning</mat-icon><span class=\"alarm-text\">' + majorAlarmsCount + ' ' + text + '</span></div></div>';\n} else {\n    return '<div class=\"alarms no-alarms\"><div id=\"alarms\" class=\"alarm-card\"><mat-icon>check_circle_outline</mat-icon><span class=\"alarm-text\">No alarms</span></div></div>';\n}\n",
              "applyDefaultMarkdownStyle" : true,
              "markdownCss" : ".alarms {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n}\n\n.alarms .alarm-card {\n    padding: 18px;\n    border-radius: 8px;\n}\n\n.alarms .alarm-text {\n    font-weight: 400;\n    font-size: 20px;\n    padding-left: 8px;\n    vertical-align: middle;\n}\n\n.alarms .mat-icon {\n    width: 36px;\n    height: 36px;\n    line-height: 36px;\n    font-size: 36px;\n    vertical-align: middle;\n}\n\n@media only screen and (min-width: 960px) and (max-width: 1200px) {\n    .alarms .alarm-card {\n         padding: 12px;\n    }\n    \n    .alarms .alarm-text {\n        font-size: 16px;\n        padding-left: 6px;\n    }\n    \n    .alarms .mat-icon {\n        width: 24px;\n        height: 24px;\n        line-height: 24px;\n        font-size: 24px;\n    }\n}\n\n.alarms.no-alarms .mat-icon {\n    color: #198038;\n}\n\n.alarms.no-alarms .alarm-text {\n    color: #868D9C;\n}\n\n.alarms.critical .alarm-card {\n    background: #D12730;\n}\n\n.alarms.critical .mat-icon, .alarms.critical .alarm-text {\n    color: #ffffff;\n}\n\n.alarms.critical .alarm-text, .alarms.major .alarm-text {\n    font-weight: 500;\n}\n\n.alarms.major .alarm-card {\n    background: #e78202\n}\n\n.alarms.major .mat-icon, .alarms.major .alarm-text {\n    color: #ffffff;\n}\n\n"
            },
            "title" : "Alarms",
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "showLegend" : false,
            "useDashboardTimewindow" : true,
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "actions" : {
              "elementClick" : [ {
                "name" : "alarms",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "field_alarms",
                "setEntityId" : true,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "popoverPreferredPlacement" : "left",
                "popoverHideOnClickOutside" : true,
                "popoverHideDashboardToolbar" : true,
                "popoverWidth" : "800px",
                "popoverHeight" : "50vh",
                "popoverStyle" : { },
                "openInSeparateDialog" : false,
                "openInPopover" : true,
                "id" : "699a826e-1f2a-9033-551d-a4853ce8c671"
              } ]
            },
            "displayTimewindow" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "fd1083dd-fad3-90c3-8eba-8a8fe0f1d93e",
          "typeFullFqn" : "system.cards.markdown_card"
        },
        "2dcc4fce-85e4-e67d-4467-7bd38e579c5c" : {
          "type" : "alarm",
          "sizeX" : 10.5,
          "sizeY" : 6.5,
          "config" : {
            "timewindow" : {
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "interval" : 1000,
                "timewindowMs" : 7776000000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1752735910714,
                  "endTimeMs" : 1752822310714
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              },
              "timezone" : null
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "enableSelection" : true,
              "enableSearch" : true,
              "enableSelectColumnDisplay" : true,
              "enableFilter" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : false,
              "reserveSpaceForHiddenAction" : "true",
              "displayDetails" : true,
              "allowAcknowledgment" : true,
              "allowClear" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "-createdTime",
              "useRowStyleFunction" : false
            },
            "title" : "New Alarms table",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 0px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "alarmSource" : {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "39927380-423a-872a-0843-de34f99264ad",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "createdTime",
                "type" : "alarm",
                "label" : "Created time",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.021092237451093787
              }, {
                "name" : "originator",
                "type" : "alarm",
                "label" : "Sensor",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.2780007688856758,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "type",
                "type" : "alarm",
                "label" : "Type",
                "color" : "#f44336",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.7323586880398418
              }, {
                "name" : "severity",
                "type" : "alarm",
                "label" : "Severity",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var severity = value;\nvar color = 'black';\nswitch (severity) {\n  case 'CRITICAL':\n    color = 'red';\n    break;\n  case 'MAJOR':\n    color = 'orange';\n    break;\n  case 'MINOR':\n    color = '#ffca3d';\n    break;\n  case 'WARNING':\n    color = '#abab00';\n    break;\n  case 'INDETERMINATE':\n    color = 'green';\n    break;\n}\n\nseverity = severity.toLowerCase();\nseverity = severity.charAt(0).toUpperCase() + severity.slice(1);\n\nreturn '<span style=\"font-weight: bold; color: ' + color +' !important;\">' + severity + '<span>';\n",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.09927019860088193,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "status",
                "type" : "alarm",
                "label" : "Status",
                "color" : "#607d8b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.6588418951443418
              } ]
            },
            "alarmsPollingInterval" : 5,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "widgetStyle" : { },
            "displayTimewindow" : true,
            "actions" : { },
            "datasources" : [ ],
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "alarmFilterConfig" : {
              "statusList" : [ "ACTIVE" ],
              "severityList" : [ ],
              "typeList" : [ ],
              "searchPropagatedAlarms" : true,
              "assignedToCurrentUser" : false,
              "assigneeId" : null
            }
          },
          "row" : 0,
          "col" : 0,
          "id" : "2dcc4fce-85e4-e67d-4467-7bd38e579c5c",
          "typeFullFqn" : "system.alarm_widgets.alarms_table"
        },
        "aac826ba-ba9f-7e72-752f-3a0a6b9cddb5" : {
          "type" : "latest",
          "sizeX" : 5,
          "sizeY" : 3.5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "61ca5437-6539-88f4-4f59-a9508eefdf1e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "criticalAlarmsCount",
                "type" : "attribute",
                "label" : "criticalAlarmsCount",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.09047361437069745
              }, {
                "name" : "majorAlarmsCount",
                "type" : "attribute",
                "label" : "majorAlarmsCount",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.27501871866952143
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1668004676539,
                  "endTimeMs" : 1668091076539
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "useMarkdownTextFunction" : true,
              "markdownTextFunction" : "var criticalAlarmsCount = data[0]['criticalAlarmsCount'];\nvar majorAlarmsCount = data[0]['majorAlarmsCount'];\nvar crtiticalAlarmsText = 'N/A';\nvar majorAlarmsText = 'N/A';\nvar criticalAlarmsClass = 'alarms';\nvar criticalAlarmsId = '';\nvar majorAlarmsClass = 'alarms';\nvar majorAlarmsId = '';\nif (typeof criticalAlarmsCount === 'number') {\n    if (criticalAlarmsCount == 0) {\n        crtiticalAlarmsText = 'No alarms';\n    } else {\n        crtiticalAlarmsText = criticalAlarmsCount + ' alarm';\n        if (criticalAlarmsCount > 1) {\n            crtiticalAlarmsText += 's';\n        }\n        criticalAlarmsClass += ' critical';\n        criticalAlarmsId = ' id=\"sensor-alarms\" '\n    }\n}\nif (typeof majorAlarmsCount === 'number') {\n    if (majorAlarmsCount === 0) {\n        majorAlarmsText = 'No alarms';\n    } else {\n        majorAlarmsText = majorAlarmsCount + ' alarm';\n        if (majorAlarmsCount > 1) {\n            majorAlarmsText += 's';\n        }\n        majorAlarmsClass += ' major';\n        majorAlarmsId = ' id=\"sensor-alarms\" '\n    }\n}\nreturn '<div class=\"sensor-details\">' +\n    '<table>' +\n        '<tr>' +\n            '<td class=\"label\">Critical alarms</td>' +\n            '<td class=\"value\"><span ' + criticalAlarmsId + ' class=\"' + criticalAlarmsClass + '\">' + crtiticalAlarmsText + '</span></td>' +\n        '</tr>' +\n        '<tr>' +\n            '<td class=\"label\">Major alarms</td>' +\n            '<td class=\"value\"><span ' + majorAlarmsId + ' class=\"' + majorAlarmsClass + '\">' + majorAlarmsText + '</span></td>' +\n        '</tr>' +\n    '</table>' +\n'</div>';\n",
              "applyDefaultMarkdownStyle" : true,
              "markdownCss" : ".tb-markdown-view > div {\n    padding: 0;\n}\n\n.sensor-details .label {\n    font-weight: 400;\n    font-size: 12px;\n    color: #868D9C;\n    width: 145px;\n    padding-right: 24px;\n}\n\n.sensor-details .value {\n    font-weight: 600;\n    font-size: 13px;\n    color: rgba(0, 0, 0, 0.76);\n}\n\n.sensor-details .value .alarms {\n    border-radius: 16px;\n}\n\n.sensor-details .value .alarms.critical {\n    padding: 4px 8px;\n    background: #D12730;\n    color: #fff;\n    cursor: pointer;\n}\n\n.sensor-details .value .alarms.major {\n    padding: 4px 8px;\n    border: solid 2px #e78202;\n    color: #e78202;\n    cursor: pointer;\n}\n"
            },
            "title" : "New Markdown/HTML Card",
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "showLegend" : false,
            "useDashboardTimewindow" : true,
            "enableDataExport" : false,
            "widgetCss" : ".tb-widget-container > .tb-widget {\n    border-radius: 0px;\n    box-shadow: none;\n}",
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "actions" : {
              "elementClick" : [ {
                "name" : "sensor-alarms",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "sensor_alarms",
                "setEntityId" : true,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "popoverPreferredPlacement" : "top",
                "popoverHideOnClickOutside" : true,
                "popoverHideDashboardToolbar" : true,
                "popoverWidth" : "750px",
                "popoverHeight" : "40vh",
                "popoverStyle" : { },
                "openInSeparateDialog" : false,
                "openInPopover" : true,
                "id" : "86f8f07a-ebef-5c54-bdde-dacb5f505061"
              } ]
            }
          },
          "row" : 0,
          "col" : 0,
          "id" : "aac826ba-ba9f-7e72-752f-3a0a6b9cddb5",
          "typeFullFqn" : "system.cards.markdown_card"
        },
        "8923d335-d974-2aaa-8c40-3eafec174a58" : {
          "type" : "alarm",
          "sizeX" : 10.5,
          "sizeY" : 6.5,
          "config" : {
            "timewindow" : {
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "interval" : 1000,
                "timewindowMs" : 7776000000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1752736287360,
                  "endTimeMs" : 1752822687360
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              },
              "timezone" : null
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "enableSelection" : true,
              "enableSearch" : true,
              "enableSelectColumnDisplay" : true,
              "enableFilter" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : false,
              "reserveSpaceForHiddenAction" : "true",
              "displayDetails" : true,
              "allowAcknowledgment" : true,
              "allowClear" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "-createdTime",
              "useRowStyleFunction" : false
            },
            "title" : "New Alarms table",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 0px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "alarmSource" : {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "61ca5437-6539-88f4-4f59-a9508eefdf1e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "createdTime",
                "type" : "alarm",
                "label" : "Created time",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.021092237451093787
              }, {
                "name" : "type",
                "type" : "alarm",
                "label" : "Type",
                "color" : "#f44336",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.7323586880398418
              }, {
                "name" : "severity",
                "type" : "alarm",
                "label" : "Severity",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var severity = value;\nvar color = 'black';\nswitch (severity) {\n  case 'CRITICAL':\n    color = 'red';\n    break;\n  case 'MAJOR':\n    color = 'orange';\n    break;\n  case 'MINOR':\n    color = '#ffca3d';\n    break;\n  case 'WARNING':\n    color = '#abab00';\n    break;\n  case 'INDETERMINATE':\n    color = 'green';\n    break;\n}\n\nseverity = severity.toLowerCase();\nseverity = severity.charAt(0).toUpperCase() + severity.slice(1);\n\nreturn '<span style=\"font-weight: bold; color: ' + color +' !important;\">' + severity + '<span>';\n",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.09927019860088193,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "status",
                "type" : "alarm",
                "label" : "Status",
                "color" : "#607d8b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.6588418951443418
              } ]
            },
            "alarmsPollingInterval" : 5,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "widgetStyle" : { },
            "displayTimewindow" : true,
            "actions" : { },
            "datasources" : [ ],
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "alarmFilterConfig" : {
              "statusList" : [ "ACTIVE" ],
              "severityList" : [ ],
              "typeList" : [ ],
              "searchPropagatedAlarms" : true
            }
          },
          "row" : 0,
          "col" : 0,
          "id" : "8923d335-d974-2aaa-8c40-3eafec174a58",
          "typeFullFqn" : "system.alarm_widgets.alarms_table"
        },
        "e18122c8-7973-5206-792a-cfa7f924a7b0" : {
          "type" : "timeseries",
          "sizeX" : 8,
          "sizeY" : 6.5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "39927380-423a-872a-0843-de34f99264ad",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "irrigationTask",
                "type" : "timeseries",
                "label" : "Start day",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "cellStyleFunction" : "return {\n    minWidth: '60px',\n    width: '60px',\n    maxWidth: '60px'\n}",
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var data;\nif (value) {\n    try {\n        data = JSON.parse(value);\n    } catch (e){}\n}\nif (data) {\n    var dateFormat;\n    if (new Date().getYear() === new Date(data.startTs).getYear()) {\n        dateFormat = 'd MMM';\n    } else {\n        dateFormat = 'd MMM yyyy';\n    }\n    return ctx.date.transform(data.startTs, dateFormat);\n} else {\n    return '';\n}"
                },
                "_hash" : 0.7275755335760952,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "irrigationTask",
                "type" : "timeseries",
                "label" : "Start time",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "cellStyleFunction" : "return {\n    minWidth: '60px',\n    width: '60px',\n    maxWidth: '60px'\n}",
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var data;\nif (value) {\n    try {\n        data = JSON.parse(value);\n    } catch (e){}\n}\nif (data) {\n    var time = ctx.date.transform(data.startTs, 'HH:mm');\n    return '<span style=\"font-weight: 600; background: rgba(111, 116, 242, 0.08); border-radius: 16px; padding: 4px 8px; color: #5553AF;\">'+time+'</span>';\n} else {\n    return '';\n}\n"
                },
                "_hash" : 0.914222992801236,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "irrigationTask",
                "type" : "timeseries",
                "label" : "End rule",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "cellStyleFunction" : "return {\n    width: '1%'\n}",
                  "useCellContentFunction" : true,
                  "useCellContentFunctionOnExport" : true,
                  "cellContentFunction" : "var data;\r\nif (value) {\r\n    try {\r\n        data = JSON.parse(value);\r\n    } catch (e) {}\r\n}\r\n\r\nif (data) {\r\n    var durationThreshold = data.durationThreshold;\r\n    var consumptionThreshold = data.consumptionThreshold;\r\n    var text = 'N/A';\r\n    var tooltip = '';\r\n    var background = '111, 116, 242';\r\n    var textColor = '#5553AF';\r\n\r\n    if (typeof durationThreshold === 'number') {\r\n        var adjustedDuration = durationThreshold + (7 * 60 * 60 * 1000);\r\n        var hours = adjustedDuration / (60 * 60 * 1000);\r\n        text = '~' + hours.toFixed(0) + ' hr';\r\n        tooltip = 'Adjusted duration threshold';\r\n    } else if (typeof consumptionThreshold === 'number') {\r\n        var adjustedConsumption = consumptionThreshold + (7 * 60 * 60 * 1000);\r\n        var hours = adjustedConsumption / (60 * 60 * 1000);\r\n        text = '~' + hours.toFixed(0) + ' hr';\r\n        tooltip = 'Adjusted consumption threshold';\r\n    }\r\n\r\n    return '<div title=\"' + tooltip + '\" style=\"width: 100%; height: 16px; background: linear-gradient(to right, rgba(' + background + ', 0.16), rgba(' + background + ', 0.08)); border-radius: 5.2px; line-height: normal;\"><span style=\"padding-left: 4px; font-weight: 600; font-size: 13px; color: ' + textColor + ';\">' + text + '</span></div>';\r\n} else {\r\n    return '';\r\n}\r\n",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "disableSorting" : false
                },
                "_hash" : 0.40035296849915825,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "irrigationTask",
                "type" : "timeseries",
                "label" : "Duration",
                "color" : "#f44336",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "cellStyleFunction" : "return {\n    width: '1%'\n}",
                  "useCellContentFunction" : true,
                  "useCellContentFunctionOnExport" : true,
                  "cellContentFunction" : "var data;\r\nif (value) {\r\n    try {\r\n        data = JSON.parse(value);\r\n    } catch (e) {}\r\n}\r\n\r\nif (data) {\r\n    var duration = data.duration;\r\n    if (typeof duration === 'number') {\r\n        // Add 8 hours (in milliseconds)\r\n        var adjustedDuration = duration + (8 * 60 * 60 * 1000);\r\n\r\n        // Convert to hours and round\r\n        var hours = (adjustedDuration / (60 * 60 * 1000)).toFixed(0);\r\n\r\n        // Styling\r\n        var background = '111, 116, 242';\r\n        var textColor = '#5553AF';\r\n\r\n        return '<div style=\"width: 100%; height: 16px; background: linear-gradient(to right, rgba(' + background + ', 0.16), rgba(' + background + ', 0.08)); border-radius: 5.21053px; line-height: normal;\"><span style=\"padding-left: 4px; font-weight: 600; font-size: 13px; color: ' + textColor + ';\">~' + hours + ' hr</span></div>';\r\n    } else {\r\n        return 'N/A';\r\n    }\r\n} else {\r\n    return 'N/A';\r\n}\r\n",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "disableSorting" : false
                },
                "_hash" : 0.16840508210390004,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "irrigationTask",
                "type" : "timeseries",
                "label" : "Personnel",
                "color" : "#607d8b",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "cellStyleFunction" : "return {\n    width: '30%'\n}",
                  "useCellContentFunction" : true,
                  "useCellContentFunctionOnExport" : true,
                  "cellContentFunction" : "var data;\r\nif (value) {\r\n    try {\r\n        data = JSON.parse(value);\r\n    } catch (e){}\r\n}\r\nif (data) {\r\n    var durationThreshold = data.durationThreshold;\r\n    var consumptionThreshold = data.consumptionThreshold;\r\n    var progress = 0;\r\n    if (durationThreshold) {\r\n        progress = data.duration ? (data.duration / durationThreshold * 100) : 0;\r\n    } else if (consumptionThreshold) {\r\n        progress = data.consumption ? (data.consumption / consumptionThreshold * 100) : 0;\r\n    }\r\n\r\n    // Subtract 97 from progress\r\n    progress = progress - 97;\r\n\r\n    // Ensure progress doesn't go below 0\r\n    if (progress < 0) {\r\n        progress = 0;\r\n    }\r\n\r\n    var percent = progress ;\r\n    var percentText = progress.toFixed(0) ;\r\n    var background = '111, 116, 242';\r\n    var textColor = '#5553AF';\r\n    return '<div style=\"width: 100%; height: 16px; background: linear-gradient(to right, rgba('+background+', 0.16) '+percent+', rgba('+background+', 0.08) '+percent+'); border-radius: 5.21053px; line-height: normal;\"><span style=\"padding-left: 4px; font-weight: 600; font-size: 13px; color: '+textColor+';\">'+percentText+'</span></div>';\r\n} else {\r\n    return '';\r\n}\r\n",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "disableSorting" : false
                },
                "_hash" : 0.5459599068099552,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              },
              "latestDataKeys" : [ ]
            } ],
            "timewindow" : {
              "hideAggregation" : true,
              "hideAggInterval" : true,
              "hideTimezone" : true,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "interval" : 1000,
                "timewindowMs" : 10368000000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1752735875483,
                  "endTimeMs" : 1752822275483
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 1000
              },
              "timezone" : null
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "enableSearch" : true,
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : false,
              "enableStickyAction" : true,
              "showCellActionsMenu" : true,
              "reserveSpaceForHiddenAction" : "true",
              "showTimestamp" : false,
              "dateFormat" : {
                "format" : "yyyy-MM-dd HH:mm:ss"
              },
              "timestampExportOption" : "onlyVisible",
              "displayPagination" : false,
              "useEntityLabel" : false,
              "defaultPageSize" : 10,
              "pageStepCount" : 3,
              "pageStepIncrement" : 10,
              "hideEmptyLines" : false,
              "disableStickyHeader" : false,
              "useRowStyleFunction" : false,
              "rowStyleFunction" : ""
            },
            "title" : "Security Tasks",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 2px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "displayTimewindow" : true,
            "titleTooltip" : "",
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "titleFont" : {
              "size" : 18,
              "sizeUnit" : "px",
              "family" : null,
              "weight" : "bold",
              "style" : null
            }
          },
          "row" : 0,
          "col" : 0,
          "id" : "e18122c8-7973-5206-792a-cfa7f924a7b0",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "aaccdb0d-72ff-9f2c-e4ae-55077480a3e6" : {
          "type" : "latest",
          "sizeX" : 5,
          "sizeY" : 3.5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "39927380-423a-872a-0843-de34f99264ad",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "irrigationState",
                "type" : "attribute",
                "label" : "irrigationState",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.33957240083120743
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1668004676539,
                  "endTimeMs" : 1668091076539
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "useMarkdownTextFunction" : true,
              "markdownTextPattern" : "# Markdown/HTML card \\n - **Current entity**: **${entityName}**. \\n - **Current value**: **${Random}**.",
              "markdownTextFunction" : "var fieldData = data[0];\r\nvar hvacEnabled = data[0]['irrigationState'] === 'ON';\r\nvar dotClass = hvacEnabled ? 'dot-active' : 'dot-inactive';\r\nvar statusText = hvacEnabled ? 'OPERATIONAL' : 'OFFLINE';\r\n\r\nreturn '<div class=\"hvac-status-container flex flex-row items-center justify-between\">' +\r\n'<div class=\"hvac-status-label\">HVAC Status</div>' +\r\n'<div class=\"dot-status\">' +\r\n  '<span class=\"status-dot ' + dotClass + '\"></span>' +\r\n  '<span class=\"dot-text\">' + statusText + '</span>' +\r\n'</div>' +\r\n'</div>';",
              "applyDefaultMarkdownStyle" : true,
              "markdownCss" : ".hvac-status-container {\r\n    height: 100%; \r\n    padding-left: 13px;\r\n}\r\n\r\n.hvac-status-label {\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n    color: #868D9C;\r\n}\r\n\r\n.dot-status {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n}\r\n\r\n.status-dot {\r\n    width: 12px;\r\n    height: 12px;\r\n    border-radius: 50%;\r\n    display: inline-block;\r\n    position: relative;\r\n}\r\n\r\n.status-dot.dot-active {\r\n    background-color: #10B981;\r\n    animation: pulse 2s infinite;\r\n}\r\n\r\n.status-dot.dot-inactive {\r\n    background-color: #9CA3AF;\r\n}\r\n\r\n@keyframes pulse {\r\n    0% {\r\n        box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.7);\r\n    }\r\n    70% {\r\n        box-shadow: 0 0 0 10px rgba(16, 185, 129, 0);\r\n    }\r\n    100% {\r\n        box-shadow: 0 0 0 0 rgba(16, 185, 129, 0);\r\n    }\r\n}\r\n\r\n.dot-text {\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000;\r\n    letter-spacing: 0.5px;\r\n}\r\n\r\n@media only screen and (min-width: 960px) and (max-width: 1200px) {\r\n    .hvac-status-container {\r\n        padding-right: 13px;\r\n    }\r\n    \r\n    .status-dot {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    \r\n    .dot-text {\r\n        font-size: 14px;\r\n    }\r\n}"
            },
            "title" : "New Markdown/HTML Card",
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "showLegend" : false,
            "useDashboardTimewindow" : true,
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "displayTimewindow" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "aaccdb0d-72ff-9f2c-e4ae-55077480a3e6",
          "typeFullFqn" : "system.cards.markdown_card"
        },
        "2dc3be15-d850-c363-6c49-e511d3778510" : {
          "type" : "latest",
          "sizeX" : 5,
          "sizeY" : 3.5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "39927380-423a-872a-0843-de34f99264ad",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "waterConsumption",
                "type" : "timeseries",
                "label" : "Total Visitors",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4383129905545107,
                "aggregationType" : "SUM",
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null,
                "comparisonEnabled" : null
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1668004676539,
                  "endTimeMs" : 1668091076539
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "useMarkdownTextFunction" : false,
              "markdownTextPattern" : "<div class=\"daily-water-consumption flex flex-col items-center justify-center\"><div class=\"text\">${Total Visitors:0} </div></div>",
              "markdownTextFunction" : "return '# Some title\\\\n - Entity name: ' + data[0]['entityName'];",
              "applyDefaultMarkdownStyle" : true,
              "markdownCss" : ".daily-water-consumption {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n}\n\n.daily-water-consumption .text {\n    font-weight: 700;\n    font-size: 20px;\n    color: #000;\n}\n\n@media only screen and (min-width: 960px) and (max-width: 1200px) {\n    .daily-water-consumption .text {\n        font-size: 2px;\n    }\n}"
            },
            "title" : "Total Visitors",
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "showLegend" : false,
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "2dc3be15-d850-c363-6c49-e511d3778510",
          "typeFullFqn" : "system.cards.markdown_card"
        },
        "84801b7f-bcd4-9658-65bc-b753bee0df9c" : {
          "typeFullFqn" : "system.time_series_chart",
          "type" : "timeseries",
          "sizeX" : 8,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : "",
              "entityAliasId" : "cd737d26-3068-aae0-d370-c93f8e7e1a00",
              "dataKeys" : [ {
                "name" : "avgMoisture",
                "type" : "timeseries",
                "label" : "${entityName}",
                "color" : "#6F74F2",
                "settings" : {
                  "yAxisId" : "default",
                  "showInLegend" : true,
                  "dataHiddenByDefault" : false,
                  "type" : "line",
                  "lineSettings" : {
                    "showLine" : true,
                    "step" : false,
                    "stepType" : "start",
                    "smooth" : true,
                    "lineType" : "solid",
                    "lineWidth" : 2,
                    "showPoints" : false,
                    "showPointLabel" : false,
                    "pointLabelPosition" : "top",
                    "pointLabelFont" : {
                      "family" : "Roboto",
                      "size" : 11,
                      "sizeUnit" : "px",
                      "style" : "normal",
                      "weight" : "400",
                      "lineHeight" : "1"
                    },
                    "pointLabelColor" : "rgba(0, 0, 0, 0.76)",
                    "enablePointLabelBackground" : false,
                    "pointLabelBackground" : "rgba(255,255,255,0.56)",
                    "pointShape" : "circle",
                    "pointSize" : 12,
                    "fillAreaSettings" : {
                      "type" : "none",
                      "opacity" : 0.4,
                      "gradient" : {
                        "start" : 100,
                        "end" : 0
                      }
                    }
                  },
                  "barSettings" : {
                    "showBorder" : false,
                    "borderWidth" : 2,
                    "borderRadius" : 0,
                    "showLabel" : false,
                    "labelPosition" : "top",
                    "labelFont" : {
                      "family" : "Roboto",
                      "size" : 11,
                      "sizeUnit" : "px",
                      "style" : "normal",
                      "weight" : "400",
                      "lineHeight" : "1"
                    },
                    "labelColor" : "rgba(0, 0, 0, 0.76)",
                    "enableLabelBackground" : false,
                    "labelBackground" : "rgba(255,255,255,0.56)",
                    "backgroundSettings" : {
                      "type" : "none",
                      "opacity" : 0.4,
                      "gradient" : {
                        "start" : 100,
                        "end" : 0
                      }
                    }
                  },
                  "tooltipValueFormatter" : null,
                  "comparisonSettings" : {
                    "showValuesForComparison" : false,
                    "comparisonValuesLabel" : "",
                    "color" : ""
                  }
                },
                "_hash" : 0.7552082927145491,
                "units" : "%",
                "decimals" : null,
                "aggregationType" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              },
              "latestDataKeys" : [ ]
            } ],
            "timewindow" : {
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "realtime" : {
                "realtimeType" : 0,
                "interval" : 86400000,
                "timewindowMs" : 2592000000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 86400000,
                "timewindowMs" : 16416000000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1752993403827,
                  "endTimeMs" : 1753079803827
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 50000
              },
              "timezone" : null
            },
            "showTitle" : true,
            "backgroundColor" : "rgba(0, 0, 0, 0)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "top",
                "sortDataKeys" : false,
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false,
                "showLatest" : false
              },
              "thresholds" : [ ],
              "dataZoom" : true,
              "stack" : false,
              "yAxis" : {
                "show" : true,
                "label" : "",
                "labelFont" : {
                  "family" : "Roboto",
                  "size" : 12,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "600",
                  "lineHeight" : "1"
                },
                "labelColor" : "rgba(0, 0, 0, 0.54)",
                "position" : "left",
                "showTickLabels" : true,
                "tickLabelFont" : {
                  "family" : "Roboto",
                  "size" : 12,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "400",
                  "lineHeight" : "1"
                },
                "tickLabelColor" : "rgba(0, 0, 0, 0.54)",
                "showTicks" : true,
                "ticksColor" : "rgba(0, 0, 0, 0.54)",
                "showLine" : true,
                "lineColor" : "rgba(0, 0, 0, 0.54)",
                "showSplitLines" : true,
                "splitLinesColor" : "rgba(0, 0, 0, 0.12)"
              },
              "xAxis" : {
                "show" : true,
                "label" : "",
                "labelFont" : {
                  "family" : "Roboto",
                  "size" : 12,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "600",
                  "lineHeight" : "1"
                },
                "labelColor" : "rgba(0, 0, 0, 0.54)",
                "position" : "bottom",
                "showTickLabels" : true,
                "tickLabelFont" : {
                  "family" : "Roboto",
                  "size" : 10,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "400",
                  "lineHeight" : "1"
                },
                "tickLabelColor" : "rgba(0, 0, 0, 0.54)",
                "ticksFormat" : { },
                "showTicks" : false,
                "ticksColor" : "rgba(0, 0, 0, 0.54)",
                "showLine" : false,
                "lineColor" : "rgba(0, 0, 0, 0.54)",
                "showSplitLines" : false,
                "splitLinesColor" : "rgba(0, 0, 0, 0.12)"
              },
              "legendLabelFont" : {
                "family" : "Roboto",
                "size" : 12,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "400",
                "lineHeight" : "16px"
              },
              "legendLabelColor" : "#868D9C",
              "showTooltip" : true,
              "tooltipTrigger" : "axis",
              "tooltipValueFont" : {
                "family" : "Roboto",
                "size" : 12,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "500",
                "lineHeight" : "16px"
              },
              "tooltipValueColor" : "rgba(0, 0, 0, 0.76)",
              "tooltipShowDate" : true,
              "tooltipDateFormat" : {
                "format" : null,
                "lastUpdateAgo" : false,
                "custom" : false,
                "auto" : true,
                "autoDateFormatSettings" : { }
              },
              "tooltipDateFont" : {
                "family" : "Roboto",
                "size" : 11,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "400",
                "lineHeight" : "16px"
              },
              "tooltipDateColor" : "rgba(0, 0, 0, 0.76)",
              "tooltipDateInterval" : true,
              "tooltipBackgroundColor" : "rgba(255, 255, 255, 0.76)",
              "tooltipBackgroundBlur" : 4,
              "background" : {
                "type" : "color",
                "color" : "#fff",
                "overlay" : {
                  "enabled" : false,
                  "color" : "rgba(255,255,255,0.72)",
                  "blur" : 3
                }
              },
              "yAxes" : {
                "default" : {
                  "units" : "%",
                  "decimals" : null,
                  "show" : true,
                  "label" : "",
                  "labelFont" : {
                    "family" : "Roboto",
                    "size" : 12,
                    "sizeUnit" : "px",
                    "style" : "normal",
                    "weight" : "600",
                    "lineHeight" : "1"
                  },
                  "labelColor" : "rgba(0, 0, 0, 0.54)",
                  "position" : "left",
                  "showTickLabels" : true,
                  "tickLabelFont" : {
                    "family" : "Roboto",
                    "size" : 12,
                    "sizeUnit" : "px",
                    "style" : "normal",
                    "weight" : "400",
                    "lineHeight" : "1"
                  },
                  "tickLabelColor" : "rgba(0, 0, 0, 0.54)",
                  "ticksFormatter" : null,
                  "showTicks" : false,
                  "ticksColor" : "rgba(0, 0, 0, 0.54)",
                  "showLine" : false,
                  "lineColor" : "rgba(0, 0, 0, 0.54)",
                  "showSplitLines" : true,
                  "splitLinesColor" : "rgba(0, 0, 0, 0.12)",
                  "id" : "default",
                  "order" : 0,
                  "min" : null,
                  "max" : null,
                  "ticksGenerator" : null,
                  "interval" : null,
                  "splitNumber" : null
                }
              },
              "noAggregationBarWidthSettings" : {
                "strategy" : "group",
                "groupWidth" : {
                  "relative" : true,
                  "relativeWidth" : 2,
                  "absoluteWidth" : 1000
                },
                "barWidth" : {
                  "relative" : true,
                  "relativeWidth" : 2,
                  "absoluteWidth" : 1000
                }
              },
              "animation" : {
                "animation" : true,
                "animationThreshold" : 2000,
                "animationDuration" : 500,
                "animationEasing" : "cubicOut",
                "animationDelay" : 0,
                "animationDurationUpdate" : 300,
                "animationEasingUpdate" : "cubicOut",
                "animationDelayUpdate" : 0
              },
              "padding" : "12px",
              "comparisonEnabled" : false,
              "timeForComparison" : "previousInterval",
              "comparisonCustomIntervalValue" : 7200000,
              "comparisonXAxis" : {
                "show" : true,
                "label" : "",
                "labelFont" : {
                  "family" : "Roboto",
                  "size" : 12,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "600",
                  "lineHeight" : "1"
                },
                "labelColor" : "rgba(0, 0, 0, 0.54)",
                "position" : "top",
                "showTickLabels" : true,
                "tickLabelFont" : {
                  "family" : "Roboto",
                  "size" : 10,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "400",
                  "lineHeight" : "1"
                },
                "tickLabelColor" : "rgba(0, 0, 0, 0.54)",
                "ticksFormat" : { },
                "showTicks" : true,
                "ticksColor" : "rgba(0, 0, 0, 0.54)",
                "showLine" : true,
                "lineColor" : "rgba(0, 0, 0, 0.54)",
                "showSplitLines" : true,
                "splitLinesColor" : "rgba(0, 0, 0, 0.12)"
              },
              "grid" : {
                "show" : false,
                "backgroundColor" : null,
                "borderWidth" : 1,
                "borderColor" : "#ccc"
              }
            },
            "title" : "Occupancy Rate",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : null,
            "mobileHeight" : 4,
            "configMode" : "advanced",
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "thermostat",
            "iconColor" : "#1F6BDD",
            "useDashboardTimewindow" : false,
            "displayTimewindow" : true,
            "titleFont" : {
              "size" : 16,
              "sizeUnit" : "px",
              "family" : null,
              "weight" : "bold",
              "style" : "oblique",
              "lineHeight" : "24px"
            },
            "titleColor" : null,
            "titleTooltip" : "",
            "widgetStyle" : { },
            "widgetCss" : "",
            "pageSize" : 1024,
            "units" : "",
            "decimals" : null,
            "noDataDisplayMessage" : "",
            "timewindowStyle" : {
              "showIcon" : false,
              "iconSize" : "24px",
              "icon" : null,
              "iconPosition" : "left",
              "font" : {
                "size" : 12,
                "sizeUnit" : "px",
                "family" : "Roboto",
                "weight" : "400",
                "style" : "normal",
                "lineHeight" : "16px"
              },
              "color" : "rgba(0, 0, 0, 0.38)",
              "displayTypePrefix" : true
            },
            "margin" : "0px",
            "borderRadius" : "",
            "iconSize" : "0px",
            "enableDataExport" : false,
            "mobileOrder" : 0
          },
          "row" : 0,
          "col" : 0,
          "id" : "84801b7f-bcd4-9658-65bc-b753bee0df9c"
        },
        "f99ce7c5-d0b0-0292-d803-78aba8ba3b31" : {
          "typeFullFqn" : "system.time_series_chart",
          "type" : "timeseries",
          "sizeX" : 8,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : "",
              "entityAliasId" : "61ca5437-6539-88f4-4f59-a9508eefdf1e",
              "dataKeys" : [ {
                "name" : "moisture",
                "type" : "timeseries",
                "label" : "Active Time",
                "color" : "#6F74F2",
                "settings" : {
                  "yAxisId" : "default",
                  "showInLegend" : true,
                  "dataHiddenByDefault" : false,
                  "type" : "line",
                  "lineSettings" : {
                    "showLine" : true,
                    "step" : false,
                    "stepType" : "start",
                    "smooth" : true,
                    "lineType" : "solid",
                    "lineWidth" : 2,
                    "showPoints" : false,
                    "showPointLabel" : false,
                    "pointLabelPosition" : "top",
                    "pointLabelFont" : {
                      "family" : "Roboto",
                      "size" : 11,
                      "sizeUnit" : "px",
                      "style" : "normal",
                      "weight" : "400",
                      "lineHeight" : "1"
                    },
                    "pointLabelColor" : "rgba(0, 0, 0, 0.76)",
                    "enablePointLabelBackground" : false,
                    "pointLabelBackground" : "rgba(255,255,255,0.56)",
                    "pointShape" : "circle",
                    "pointSize" : 12,
                    "fillAreaSettings" : {
                      "type" : "none",
                      "opacity" : 0.4,
                      "gradient" : {
                        "start" : 100,
                        "end" : 0
                      }
                    }
                  },
                  "barSettings" : {
                    "showBorder" : false,
                    "borderWidth" : 2,
                    "borderRadius" : 0,
                    "showLabel" : false,
                    "labelPosition" : "top",
                    "labelFont" : {
                      "family" : "Roboto",
                      "size" : 11,
                      "sizeUnit" : "px",
                      "style" : "normal",
                      "weight" : "400",
                      "lineHeight" : "1"
                    },
                    "labelColor" : "rgba(0, 0, 0, 0.76)",
                    "enableLabelBackground" : false,
                    "labelBackground" : "rgba(255,255,255,0.56)",
                    "backgroundSettings" : {
                      "type" : "none",
                      "opacity" : 0.4,
                      "gradient" : {
                        "start" : 100,
                        "end" : 0
                      }
                    }
                  },
                  "tooltipValueFormatter" : null,
                  "comparisonSettings" : {
                    "showValuesForComparison" : false,
                    "comparisonValuesLabel" : "",
                    "color" : ""
                  }
                },
                "_hash" : 0.7552082927145491,
                "units" : "hr",
                "decimals" : null,
                "aggregationType" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "battery",
                "type" : "timeseries",
                "label" : "Idle Time",
                "color" : "#ffc107",
                "settings" : {
                  "yAxisId" : "default",
                  "showInLegend" : true,
                  "dataHiddenByDefault" : false,
                  "type" : "line",
                  "lineSettings" : {
                    "showLine" : true,
                    "step" : false,
                    "stepType" : "start",
                    "smooth" : false,
                    "lineType" : "solid",
                    "lineWidth" : 2,
                    "showPoints" : false,
                    "showPointLabel" : false,
                    "pointLabelPosition" : "top",
                    "pointLabelFont" : {
                      "family" : "Roboto",
                      "size" : 11,
                      "sizeUnit" : "px",
                      "style" : "normal",
                      "weight" : "400",
                      "lineHeight" : "1"
                    },
                    "pointLabelColor" : "rgba(0, 0, 0, 0.76)",
                    "enablePointLabelBackground" : false,
                    "pointLabelBackground" : "rgba(255,255,255,0.56)",
                    "pointShape" : "emptyCircle",
                    "pointSize" : 4,
                    "fillAreaSettings" : {
                      "type" : "none",
                      "opacity" : 0.4,
                      "gradient" : {
                        "start" : 100,
                        "end" : 0
                      }
                    }
                  },
                  "barSettings" : {
                    "showBorder" : false,
                    "borderWidth" : 2,
                    "borderRadius" : 0,
                    "showLabel" : false,
                    "labelPosition" : "top",
                    "labelFont" : {
                      "family" : "Roboto",
                      "size" : 11,
                      "sizeUnit" : "px",
                      "style" : "normal",
                      "weight" : "400",
                      "lineHeight" : "1"
                    },
                    "labelColor" : "rgba(0, 0, 0, 0.76)",
                    "enableLabelBackground" : false,
                    "labelBackground" : "rgba(255,255,255,0.56)",
                    "backgroundSettings" : {
                      "type" : "none",
                      "opacity" : 0.4,
                      "gradient" : {
                        "start" : 100,
                        "end" : 0
                      }
                    }
                  },
                  "comparisonSettings" : {
                    "showValuesForComparison" : false,
                    "comparisonValuesLabel" : "",
                    "color" : ""
                  }
                },
                "_hash" : 0.6443307691214918,
                "aggregationType" : null,
                "units" : "hr",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              },
              "latestDataKeys" : [ {
                "name" : "minMoistureThreshold",
                "type" : "attribute",
                "label" : "minMoistureThreshold",
                "color" : "#f44336",
                "settings" : {
                  "__thresholdKey" : true
                },
                "_hash" : 0.30616283218066975
              }, {
                "name" : "maxMoistureThreshold",
                "type" : "attribute",
                "label" : "maxMoistureThreshold",
                "color" : "#ffc107",
                "settings" : {
                  "__thresholdKey" : true
                },
                "_hash" : 0.6910259517980766
              } ]
            } ],
            "timewindow" : {
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "interval" : 7200000,
                "timewindowMs" : 2592000000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1752993845129,
                  "endTimeMs" : 1753080245129
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 50000
              },
              "timezone" : null
            },
            "showTitle" : true,
            "backgroundColor" : "rgba(0, 0, 0, 0)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "comparisonEnabled" : false,
              "timeForComparison" : "previousInterval",
              "comparisonCustomIntervalValue" : 7200000,
              "comparisonXAxis" : {
                "show" : true,
                "label" : "",
                "labelFont" : {
                  "family" : "Roboto",
                  "size" : 12,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "600",
                  "lineHeight" : "1"
                },
                "labelColor" : "rgba(0, 0, 0, 0.54)",
                "position" : "top",
                "showTickLabels" : true,
                "tickLabelFont" : {
                  "family" : "Roboto",
                  "size" : 10,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "400",
                  "lineHeight" : "1"
                },
                "tickLabelColor" : "rgba(0, 0, 0, 0.54)",
                "ticksFormat" : { },
                "showTicks" : true,
                "ticksColor" : "rgba(0, 0, 0, 0.54)",
                "showLine" : true,
                "lineColor" : "rgba(0, 0, 0, 0.54)",
                "showSplitLines" : true,
                "splitLinesColor" : "rgba(0, 0, 0, 0.12)"
              },
              "yAxes" : {
                "default" : {
                  "units" : "%",
                  "decimals" : null,
                  "show" : true,
                  "label" : "Efficiency",
                  "labelFont" : {
                    "family" : "Roboto",
                    "size" : 12,
                    "sizeUnit" : "px",
                    "style" : "normal",
                    "weight" : "600",
                    "lineHeight" : "1"
                  },
                  "labelColor" : "rgba(0, 0, 0, 0.54)",
                  "position" : "right",
                  "showTickLabels" : true,
                  "tickLabelFont" : {
                    "family" : "Roboto",
                    "size" : 12,
                    "sizeUnit" : "px",
                    "style" : "normal",
                    "weight" : "400",
                    "lineHeight" : "1"
                  },
                  "tickLabelColor" : "#868D9C",
                  "ticksFormatter" : null,
                  "showTicks" : false,
                  "ticksColor" : "rgba(0, 0, 0, 0.54)",
                  "showLine" : false,
                  "lineColor" : "rgba(0, 0, 0, 0.54)",
                  "showSplitLines" : true,
                  "splitLinesColor" : "rgba(0, 0, 0, 0.12)",
                  "id" : "default",
                  "order" : 0,
                  "min" : null,
                  "max" : null,
                  "ticksGenerator" : null,
                  "interval" : null,
                  "splitNumber" : null
                }
              },
              "thresholds" : [ {
                "type" : "latestKey",
                "yAxisId" : "default",
                "units" : "%",
                "decimals" : null,
                "lineColor" : "#FFD007",
                "lineType" : "solid",
                "lineWidth" : 2,
                "startSymbol" : "none",
                "startSymbolSize" : 5,
                "endSymbol" : "arrow",
                "endSymbolSize" : 5,
                "showLabel" : true,
                "labelPosition" : "insideEndTop",
                "labelFont" : {
                  "size" : 12,
                  "family" : "Roboto",
                  "weight" : "500",
                  "style" : "normal"
                },
                "labelColor" : "rgb(255, 255, 255)",
                "enableLabelBackground" : true,
                "labelBackground" : "#FF6707",
                "latestKey" : "minMoistureThreshold",
                "latestKeyType" : "attribute"
              }, {
                "type" : "latestKey",
                "yAxisId" : "default",
                "units" : "%",
                "decimals" : null,
                "lineColor" : "#077BFF",
                "lineType" : "solid",
                "lineWidth" : 2,
                "startSymbol" : "none",
                "startSymbolSize" : 5,
                "endSymbol" : "arrow",
                "endSymbolSize" : 5,
                "showLabel" : true,
                "labelPosition" : "insideEndTop",
                "labelFont" : {
                  "size" : 12,
                  "family" : "Roboto",
                  "weight" : "500",
                  "style" : "normal"
                },
                "labelColor" : "rgb(255, 255, 255)",
                "enableLabelBackground" : true,
                "labelBackground" : "#FF6707",
                "latestKey" : "maxMoistureThreshold",
                "latestKeyType" : "attribute"
              } ],
              "dataZoom" : false,
              "stack" : false,
              "grid" : {
                "show" : false,
                "backgroundColor" : null,
                "borderWidth" : 1,
                "borderColor" : "#ccc"
              },
              "xAxis" : {
                "show" : true,
                "label" : "",
                "labelFont" : {
                  "family" : "Roboto",
                  "size" : 12,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "600",
                  "lineHeight" : "1"
                },
                "labelColor" : "rgba(0, 0, 0, 0.54)",
                "position" : "bottom",
                "showTickLabels" : true,
                "tickLabelFont" : {
                  "family" : "Roboto",
                  "size" : 10,
                  "sizeUnit" : "px",
                  "style" : "normal",
                  "weight" : "400",
                  "lineHeight" : "1"
                },
                "tickLabelColor" : "#868D9C",
                "ticksFormat" : { },
                "showTicks" : false,
                "ticksColor" : "rgba(0, 0, 0, 0.54)",
                "showLine" : false,
                "lineColor" : "rgba(0, 0, 0, 0.54)",
                "showSplitLines" : false,
                "splitLinesColor" : "rgba(0, 0, 0, 0.12)"
              },
              "noAggregationBarWidthSettings" : {
                "strategy" : "group",
                "groupWidth" : {
                  "relative" : true,
                  "relativeWidth" : 2,
                  "absoluteWidth" : 1000
                },
                "barWidth" : {
                  "relative" : true,
                  "relativeWidth" : 2,
                  "absoluteWidth" : 1000
                }
              },
              "showLegend" : false,
              "legendColumnTitleFont" : {
                "family" : "Roboto",
                "size" : 12,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "400",
                "lineHeight" : "16px"
              },
              "legendColumnTitleColor" : "rgba(0, 0, 0, 0.38)",
              "legendLabelFont" : {
                "family" : "Roboto",
                "size" : 12,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "400",
                "lineHeight" : "16px"
              },
              "legendLabelColor" : "#868D9C",
              "legendValueFont" : {
                "family" : "Roboto",
                "size" : 12,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "500",
                "lineHeight" : "16px"
              },
              "legendValueColor" : "rgba(0, 0, 0, 0.87)",
              "legendConfig" : {
                "direction" : "column",
                "position" : "top",
                "sortDataKeys" : false,
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false,
                "showLatest" : false
              },
              "showTooltip" : true,
              "tooltipTrigger" : "axis",
              "tooltipLabelFont" : {
                "family" : "Roboto",
                "size" : 12,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "400",
                "lineHeight" : "16px"
              },
              "tooltipLabelColor" : "rgba(0, 0, 0, 0.76)",
              "tooltipValueFont" : {
                "family" : "Roboto",
                "size" : 12,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "500",
                "lineHeight" : "16px"
              },
              "tooltipValueColor" : "rgba(0, 0, 0, 0.76)",
              "tooltipValueFormatter" : null,
              "tooltipShowDate" : true,
              "tooltipDateFormat" : {
                "format" : null,
                "lastUpdateAgo" : false,
                "custom" : false,
                "auto" : true,
                "autoDateFormatSettings" : {
                  "millisecond" : "MMM dd yyyy HH:mm:ss"
                }
              },
              "tooltipDateFont" : {
                "family" : "Roboto",
                "size" : 11,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "400",
                "lineHeight" : "16px"
              },
              "tooltipDateColor" : "rgba(0, 0, 0, 0.76)",
              "tooltipDateInterval" : false,
              "tooltipBackgroundColor" : "rgba(255, 255, 255, 0.76)",
              "tooltipBackgroundBlur" : 4,
              "animation" : {
                "animation" : true,
                "animationThreshold" : 2000,
                "animationDuration" : 500,
                "animationEasing" : "cubicOut",
                "animationDelay" : 0,
                "animationDurationUpdate" : 300,
                "animationEasingUpdate" : "cubicOut",
                "animationDelayUpdate" : 0
              },
              "background" : {
                "type" : "color",
                "color" : "#fff",
                "overlay" : {
                  "enabled" : false,
                  "color" : "rgba(255,255,255,0.72)",
                  "blur" : 3
                }
              },
              "padding" : "0"
            },
            "title" : "Weekly Patrol Activity",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : null,
            "mobileHeight" : 4,
            "configMode" : "advanced",
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "thermostat",
            "iconColor" : "#1F6BDD",
            "useDashboardTimewindow" : false,
            "displayTimewindow" : true,
            "titleFont" : {
              "size" : 16,
              "sizeUnit" : "px",
              "family" : null,
              "weight" : "bold",
              "style" : "oblique",
              "lineHeight" : "24px"
            },
            "titleColor" : null,
            "titleTooltip" : "",
            "widgetStyle" : { },
            "widgetCss" : "",
            "pageSize" : 1024,
            "units" : "",
            "decimals" : null,
            "noDataDisplayMessage" : "",
            "timewindowStyle" : {
              "showIcon" : true,
              "iconSize" : "24px",
              "icon" : "query_builder",
              "iconPosition" : "left",
              "font" : {
                "size" : 12,
                "sizeUnit" : "px",
                "family" : "Roboto",
                "weight" : "400",
                "style" : "normal",
                "lineHeight" : "16px"
              },
              "color" : "rgba(0, 0, 0, 0.38)",
              "displayTypePrefix" : true
            },
            "margin" : "0px",
            "borderRadius" : "",
            "iconSize" : "0px",
            "enableDataExport" : false,
            "mobileOrder" : 0
          },
          "row" : 0,
          "col" : 0,
          "id" : "f99ce7c5-d0b0-0292-d803-78aba8ba3b31"
        },
        "ba981af4-bfce-68cd-cc3e-3dd4115614ed" : {
          "typeFullFqn" : "system.map",
          "type" : "latest",
          "sizeX" : 8.5,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1742901574447,
                  "endTimeMs" : 1742987974447
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgba(0, 0, 0, 0)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "mapType" : "image",
              "layers" : [ {
                "label" : "{i18n:widgets.maps.layer.satellite}",
                "provider" : "openstreet",
                "layerType" : "Esri.WorldImagery"
              }, {
                "label" : "{i18n:widgets.maps.layer.hybrid}",
                "provider" : "openstreet",
                "layerType" : "Esri.WorldImagery",
                "referenceLayer" : "openstreetmap_hybrid"
              } ],
              "imageSource" : {
                "sourceType" : "image",
                "url" : "tb-image;/api/images/tenant/download-Picsart-AiImageEnhancer.jpg",
                "entityAliasId" : null,
                "entityKey" : null
              },
              "markers" : [ {
                "dsType" : "entity",
                "dsLabel" : "",
                "dsDeviceId" : null,
                "dsEntityAliasId" : "cd737d26-3068-aae0-d370-c93f8e7e1a00",
                "dsFilterId" : null,
                "additionalDataSources" : null,
                "additionalDataKeys" : null,
                "label" : {
                  "show" : true,
                  "type" : "pattern",
                  "pattern" : "<b><span style=\"color:green\">${entityName}</span></b>",
                  "patternFunction" : null
                },
                "tooltip" : {
                  "show" : true,
                  "type" : "pattern",
                  "pattern" : "<b>${entityName}</b><br/><br/><br/><small><link-act name='field'>Details</link-act></small>",
                  "patternFunction" : null,
                  "trigger" : "hover",
                  "autoclose" : true,
                  "offsetX" : 0,
                  "offsetY" : -1,
                  "tagActions" : null
                },
                "click" : {
                  "type" : "openDashboardState",
                  "targetDashboardStateId" : "field",
                  "setEntityId" : true,
                  "stateEntityParamName" : null,
                  "openRightLayout" : false,
                  "openInSeparateDialog" : false,
                  "openInPopover" : false
                },
                "groups" : null,
                "edit" : {
                  "enabledActions" : [ ],
                  "attributeScope" : "SERVER_SCOPE",
                  "snappable" : false
                },
                "xKey" : {
                  "name" : "xPos",
                  "type" : "attribute",
                  "label" : "xPos",
                  "color" : "#2196f3",
                  "settings" : { },
                  "_hash" : 0.6994071216399149
                },
                "yKey" : {
                  "name" : "yPos",
                  "type" : "attribute",
                  "label" : "yPos",
                  "color" : "#2196f3",
                  "settings" : { },
                  "_hash" : 0.8650465702730182
                },
                "markerType" : "shape",
                "markerShape" : {
                  "shape" : "markerShape1",
                  "size" : 34,
                  "color" : {
                    "type" : "constant",
                    "color" : "#307FE5"
                  }
                },
                "markerIcon" : {
                  "iconContainer" : "iconContainer1",
                  "icon" : "mdi:lightbulb-on",
                  "size" : 48,
                  "color" : {
                    "type" : "constant",
                    "color" : "#307FE5"
                  }
                },
                "markerImage" : {
                  "type" : "image",
                  "image" : "/assets/markers/shape1.svg",
                  "imageSize" : 34
                },
                "markerOffsetX" : 0.5,
                "markerOffsetY" : 1,
                "positionFunction" : "return {x: origXPos, y: origYPos};",
                "markerClustering" : {
                  "enable" : false,
                  "zoomOnClick" : true,
                  "maxZoom" : null,
                  "maxClusterRadius" : 80,
                  "zoomAnimation" : true,
                  "showCoverageOnHover" : true,
                  "spiderfyOnMaxZoom" : false,
                  "chunkedLoad" : false,
                  "lazyLoad" : true,
                  "useClusterMarkerColorFunction" : false,
                  "clusterMarkerColorFunction" : null
                }
              } ],
              "polygons" : [ ],
              "circles" : [ ],
              "additionalDataSources" : [ ],
              "controlsPosition" : "topleft",
              "zoomActions" : [ "scroll", "doubleClick", "controlButtons" ],
              "scales" : [ ],
              "dragModeButton" : false,
              "fitMapBounds" : true,
              "useDefaultCenterPosition" : false,
              "defaultCenterPosition" : "0,0",
              "defaultZoomLevel" : null,
              "mapPageSize" : 16384,
              "mapActionButtons" : [ ],
              "background" : {
                "type" : "color",
                "color" : "#fff",
                "overlay" : {
                  "enabled" : false,
                  "color" : "rgba(255,255,255,0.72)",
                  "blur" : 3
                }
              },
              "padding" : "0"
            },
            "title" : "Map",
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showTitleIcon" : false,
            "titleTooltip" : "",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "widgetStyle" : { },
            "widgetCss" : "",
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "configMode" : "advanced",
            "titleFont" : null,
            "titleColor" : null,
            "margin" : "0px",
            "borderRadius" : "",
            "iconSize" : "24px",
            "titleIcon" : "map",
            "iconColor" : "#1F6BDD",
            "actions" : { },
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "ba981af4-bfce-68cd-cc3e-3dd4115614ed"
        },
        "3ae2cf24-0941-03fb-d93e-f25250bf5350" : {
          "typeFullFqn" : "system.map",
          "type" : "latest",
          "sizeX" : 8.5,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1742901977434,
                  "endTimeMs" : 1742988377434
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgba(0, 0, 0, 0)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "mapType" : "image",
              "layers" : [ {
                "label" : "{i18n:widgets.maps.layer.satellite}",
                "provider" : "openstreet",
                "layerType" : "Esri.WorldImagery"
              }, {
                "label" : "{i18n:widgets.maps.layer.hybrid}",
                "provider" : "openstreet",
                "layerType" : "Esri.WorldImagery",
                "referenceLayer" : "openstreetmap_hybrid"
              } ],
              "imageSource" : {
                "sourceType" : "entityKey",
                "url" : "tb-image;/api/images/tenant/Retail-Store-Layout-Strategy_-What-to-Consider-and-How-to-Plan-1-980x661.png",
                "entityAliasId" : "39927380-423a-872a-0843-de34f99264ad",
                "entityKey" : {
                  "name" : "plan",
                  "type" : "attribute",
                  "label" : "plan",
                  "color" : "#2196f3",
                  "settings" : { },
                  "_hash" : 0.30852016136653615
                }
              },
              "markers" : [ {
                "dsType" : "entity",
                "dsLabel" : "",
                "dsDeviceId" : null,
                "dsEntityAliasId" : "aa55618a-278a-0776-832d-fa1fe5769a2a",
                "dsFilterId" : null,
                "additionalDataSources" : null,
                "additionalDataKeys" : [ {
                  "name" : "type",
                  "type" : "entityField",
                  "label" : "type",
                  "color" : "#2196f3",
                  "settings" : { },
                  "_hash" : 0.4920156422018893,
                  "aggregationType" : null,
                  "units" : null,
                  "decimals" : null,
                  "funcBody" : null,
                  "usePostProcessing" : null,
                  "postFuncBody" : null
                }, {
                  "name" : "moisture",
                  "type" : "timeseries",
                  "label" : "moisture",
                  "color" : "#2196f3",
                  "settings" : { },
                  "_hash" : 0.7377089925576237
                }, {
                  "name" : "minMoistureThreshold",
                  "type" : "attribute",
                  "label" : "minMoistureThreshold",
                  "color" : "#2196f3",
                  "settings" : { },
                  "_hash" : 0.5240998179015635
                }, {
                  "name" : "maxMoistureThreshold",
                  "type" : "attribute",
                  "label" : "maxMoistureThreshold",
                  "color" : "#2196f3",
                  "settings" : { },
                  "_hash" : 0.2745383225592155
                }, {
                  "name" : "photo",
                  "type" : "attribute",
                  "label" : "photo",
                  "color" : "#2196f3",
                  "settings" : { },
                  "_hash" : 0.8948798908445142
                } ],
                "label" : {
                  "show" : false,
                  "type" : "pattern",
                  "pattern" : "",
                  "patternFunction" : null
                },
                "tooltip" : {
                  "show" : false,
                  "trigger" : "click",
                  "autoclose" : true,
                  "type" : "pattern",
                  "pattern" : "",
                  "offsetX" : 0,
                  "offsetY" : -1,
                  "patternFunction" : null,
                  "tagActions" : null
                },
                "click" : {
                  "type" : "openDashboardState",
                  "targetDashboardStateId" : "moisture_sensor_details",
                  "setEntityId" : true,
                  "stateEntityParamName" : null,
                  "openRightLayout" : false,
                  "popoverPreferredPlacement" : "top",
                  "popoverHideOnClickOutside" : true,
                  "popoverHideDashboardToolbar" : true,
                  "popoverWidth" : "400px",
                  "popoverHeight" : "300px",
                  "popoverStyle" : { },
                  "openInSeparateDialog" : false,
                  "openInPopover" : true
                },
                "groups" : null,
                "edit" : {
                  "enabledActions" : [ ],
                  "attributeScope" : "SERVER_SCOPE",
                  "snappable" : false
                },
                "xKey" : {
                  "name" : "xPos",
                  "type" : "attribute",
                  "label" : "xPos",
                  "color" : "#2196f3",
                  "settings" : { },
                  "_hash" : 0.3269591688902279
                },
                "yKey" : {
                  "name" : "yPos",
                  "type" : "attribute",
                  "label" : "yPos",
                  "color" : "#2196f3",
                  "settings" : { },
                  "_hash" : 0.12456877176052938
                },
                "markerType" : "image",
                "markerShape" : {
                  "shape" : "markerShape1",
                  "size" : 34,
                  "color" : {
                    "type" : "constant",
                    "color" : "#307FE5"
                  }
                },
                "markerIcon" : {
                  "iconContainer" : "iconContainer1",
                  "icon" : "mdi:lightbulb-on",
                  "size" : 48,
                  "color" : {
                    "type" : "constant",
                    "color" : "#307FE5"
                  }
                },
                "markerImage" : {
                  "type" : "function",
                  "imageFunction" : "var type = data['type'];\r\nif (type === 'SI Soil Moisture Sensor') {\r\n    var avatarSize = 48;\r\n    var statusSize = 18;\r\n    var statusRight = 1;\r\n    var statusTop = 3;\r\n    var avatarPadding = 3;\r\n    \r\n    var moisture = data['moisture'];\r\n    var minMoistureThreshold = data['minMoistureThreshold'];\r\n    var maxMoistureThreshold = data['maxMoistureThreshold'];\r\n    \r\n    // Determine if sensor is active (has recent data)\r\n    var isActive = typeof moisture === 'number' && moisture !== null && moisture !== undefined;\r\n    \r\n    // Set border properties based on active status\r\n    var borderSize = 1;\r\n    var borderColor = '#3AA94D'; // Green for active\r\n    var borderOpacity = 0.8;\r\n    if (!isActive) {\r\n        borderSize = 3;\r\n        borderColor = '#999999'; // Gray for inactive\r\n        borderOpacity = 1;\r\n    }\r\n    \r\n    var avatarOffsetX = 0;\r\n    var avatarOffsetY = statusTop;\r\n    var svgWidth = avatarSize + avatarPadding * 2 + statusRight;\r\n    var svgHeight = avatarSize + avatarPadding * 2 + statusTop;\r\n    \r\n    var svgStr = '<svg width=\"' + svgWidth + '\" height=\"' + svgHeight + '\" viewBox=\"0 0 ' + svgWidth + ' ' + svgHeight + '\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">';\r\n    \r\n    var photo = data.photo || 'data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\"><rect width=\"48\" height=\"48\" fill=\"%23f0f0f0\"/><text x=\"24\" y=\"28\" text-anchor=\"middle\" fill=\"%23999\" font-family=\"Arial\" font-size=\"12\">Sensor</text></svg>';\r\n    \r\n    svgStr += getSensorPhotoCircleSvg(avatarSize, avatarPadding, borderSize, borderColor, borderOpacity, photo, avatarOffsetX, avatarOffsetY);\r\n    svgStr += getSensorStatusSvg(statusSize, statusRight, avatarSize, avatarPadding, isActive);\r\n    \r\n    svgStr += '</svg>';\r\n\r\n    var encodedSvg = encodeURIComponent(svgStr);\r\n    var svgUrl = 'data:image/svg+xml,' + encodedSvg;\r\n    \r\n    return {\r\n        url: svgUrl,\r\n        size: svgHeight,\r\n        markerOffset: [avatarPadding + avatarSize / 2, statusTop + avatarPadding + avatarSize / 2],\r\n        tooltipOffset: [0, - (statusTop + avatarPadding + avatarSize / 2)]\r\n    };\r\n} else {\r\n    return null;\r\n}\r\n\r\nfunction getSensorPhotoCircleSvg(avatarSize, avatarPadding, borderSize, borderColor, borderOpacity, photo, offsetX, offsetY) {\r\n    var cx = avatarSize / 2;\r\n    var cy = avatarSize / 2;\r\n    var r = avatarSize / 2;\r\n    return '<defs>' +\r\n        '<clipPath id=\"sensorCircleView\">' +\r\n            '<circle cx=\"'+cx+'\" cy=\"'+cy+'\" r=\"'+r+'\" fill=\"#FFFFFF\" />' +\r\n        '</clipPath>' +\r\n    '</defs>' +\r\n    '<g transform=\"translate('+(offsetX + avatarPadding)+','+(offsetY + avatarPadding)+')\">' +\r\n        '<circle cx=\"'+cx+'\" cy=\"'+cy+'\" r=\"'+(r+borderSize)+'\" fill=\"'+borderColor+'\" opacity=\"'+borderOpacity+'\"/>' +\r\n        '<image ' +\r\n          'width=\"'+avatarSize+'\" ' +\r\n          'height=\"'+avatarSize+'\" ' +\r\n          'href=\"'+photo+'\" ' +\r\n          'clip-path=\"url(#sensorCircleView)\"' +\r\n        '/>' +\r\n    '</g>';\r\n}\r\n\r\nfunction getSensorStatusSvg(statusSize, statusRight, avatarSize, avatarPadding, isActive) {\r\n    var offsetX = avatarSize + avatarPadding*2 - statusSize + statusRight;\r\n    var offsetY = 0;\r\n    var statusShape;\r\n    \r\n    if (isActive) {\r\n        // Green circle with pulsing animation for active sensor\r\n        statusShape = '<circle cx=\"9\" cy=\"9\" r=\"9\" fill=\"#3AA94D\">' +\r\n                      '<animate attributeName=\"opacity\" values=\"1;0.6;1\" dur=\"2s\" repeatCount=\"indefinite\"/>' +\r\n                      '</circle>';\r\n    } else {\r\n        // Gray circle with X mark for inactive sensor\r\n        statusShape = '<rect width=\"18\" height=\"18\" rx=\"9\" fill=\"#999999\"/>' +\r\n                      '<path d=\"M12.7071 5.29289C13.0976 5.68342 13.0976 6.31658 12.7071 6.70711L10.4142 9L12.7071 11.2929C13.0976 11.6834 13.0976 12.3166 12.7071 12.7071C12.3166 13.0976 11.6834 13.0976 11.2929 12.7071L9 10.4142L6.70711 12.7071C6.31658 13.0976 5.68342 13.0976 5.29289 12.7071C4.90237 12.3166 4.90237 11.6834 5.29289 11.2929L7.58579 9L5.29289 6.70711C4.90237 6.31658 4.90237 5.68342 5.29289 5.29289C5.68342 4.90237 6.31658 4.90237 6.70711 5.29289L9 7.58579L11.2929 5.29289C11.6834 4.90237 12.3166 4.90237 12.7071 5.29289Z\" fill=\"white\"/>';\r\n    }\r\n    \r\n    return '<g transform=\"translate('+offsetX+','+offsetY+')\">' +\r\n           statusShape + \r\n           '</g>';\r\n}",
                  "images" : null
                },
                "markerOffsetX" : 0.5,
                "markerOffsetY" : 1,
                "positionFunction" : "return {x: origXPos, y: origYPos};",
                "markerClustering" : {
                  "enable" : false,
                  "zoomOnClick" : true,
                  "maxZoom" : null,
                  "maxClusterRadius" : 80,
                  "zoomAnimation" : true,
                  "showCoverageOnHover" : true,
                  "spiderfyOnMaxZoom" : false,
                  "chunkedLoad" : false,
                  "lazyLoad" : true,
                  "useClusterMarkerColorFunction" : false,
                  "clusterMarkerColorFunction" : null
                }
              } ],
              "polygons" : [ {
                "dsType" : "entity",
                "dsLabel" : "",
                "dsDeviceId" : null,
                "dsEntityAliasId" : "39927380-423a-872a-0843-de34f99264ad",
                "dsFilterId" : null,
                "additionalDataKeys" : [ {
                  "name" : "name",
                  "type" : "entityField",
                  "label" : "Name",
                  "color" : "#2196f3",
                  "settings" : { },
                  "_hash" : 0.9160588481387533
                }, {
                  "name" : "type",
                  "type" : "entityField",
                  "label" : "type",
                  "color" : "#2196f3",
                  "settings" : { },
                  "_hash" : 0.3448235727091016,
                  "aggregationType" : null,
                  "units" : null,
                  "decimals" : null,
                  "funcBody" : null,
                  "usePostProcessing" : null,
                  "postFuncBody" : null
                } ],
                "label" : {
                  "show" : false,
                  "type" : "pattern",
                  "pattern" : "${entityName}"
                },
                "tooltip" : {
                  "show" : false,
                  "trigger" : "click",
                  "autoclose" : true,
                  "type" : "pattern",
                  "pattern" : "<b>${entityName}</b><br/><br/><b>TimeStamp:</b> ${ts:7}",
                  "offsetX" : 0,
                  "offsetY" : -1
                },
                "click" : {
                  "type" : "doNothing"
                },
                "groups" : null,
                "edit" : {
                  "enabledActions" : [ ],
                  "attributeScope" : "SERVER_SCOPE",
                  "snappable" : false
                },
                "fillColor" : {
                  "type" : "constant",
                  "color" : "rgba(51,136,255,0.2)"
                },
                "strokeColor" : {
                  "type" : "constant",
                  "color" : "#3388ff"
                },
                "strokeWeight" : 3,
                "polygonKey" : {
                  "name" : "perimeter",
                  "label" : "perimeter",
                  "type" : "attribute",
                  "settings" : { },
                  "color" : "#2196f3"
                }
              } ],
              "circles" : [ ],
              "additionalDataSources" : [ ],
              "controlsPosition" : "topleft",
              "zoomActions" : [ "scroll", "doubleClick", "controlButtons" ],
              "scales" : [ "metric" ],
              "dragModeButton" : false,
              "fitMapBounds" : false,
              "useDefaultCenterPosition" : false,
              "defaultCenterPosition" : "0,0",
              "defaultZoomLevel" : 15,
              "mapPageSize" : 16384,
              "mapActionButtons" : [ ],
              "background" : {
                "type" : "color",
                "color" : "#fff",
                "overlay" : {
                  "enabled" : false,
                  "color" : "rgba(255,255,255,0.72)",
                  "blur" : 3
                }
              },
              "padding" : "3px"
            },
            "title" : "Map",
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showTitleIcon" : false,
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "widgetStyle" : { },
            "widgetCss" : "",
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "configMode" : "advanced",
            "titleFont" : null,
            "titleColor" : null,
            "margin" : "0px",
            "borderRadius" : "",
            "iconSize" : "24px",
            "titleIcon" : "map",
            "iconColor" : "#1F6BDD",
            "actions" : { },
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "3ae2cf24-0941-03fb-d93e-f25250bf5350"
        },
        "f21e048f-cbeb-3a95-2751-e1afe17af804" : {
          "typeFullFqn" : "system.map",
          "type" : "latest",
          "sizeX" : 8.5,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1742903170580,
                  "endTimeMs" : 1742989570580
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgba(0, 0, 0, 0)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "mapType" : "geoMap",
              "layers" : [ {
                "label" : "{i18n:widgets.maps.layer.roadmap}",
                "provider" : "openstreet",
                "layerType" : "OpenStreetMap.HOT",
                "referenceLayer" : null
              }, {
                "label" : "{i18n:widgets.maps.layer.satellite}",
                "provider" : "openstreet",
                "layerType" : "Esri.WorldImagery"
              }, {
                "label" : "{i18n:widgets.maps.layer.hybrid}",
                "provider" : "openstreet",
                "layerType" : "Esri.WorldImagery",
                "referenceLayer" : "openstreetmap_hybrid"
              } ],
              "imageSource" : null,
              "markers" : [ ],
              "polygons" : [ {
                "dsType" : "entity",
                "dsLabel" : "",
                "dsDeviceId" : null,
                "dsEntityAliasId" : "39927380-423a-872a-0843-de34f99264ad",
                "dsFilterId" : null,
                "additionalDataKeys" : [ {
                  "name" : "name",
                  "type" : "entityField",
                  "label" : "Name",
                  "color" : "#2196f3",
                  "settings" : { },
                  "_hash" : 0.010240480387154305
                } ],
                "label" : {
                  "show" : false,
                  "type" : "pattern",
                  "pattern" : "${entityName}"
                },
                "tooltip" : {
                  "show" : false,
                  "trigger" : "click",
                  "autoclose" : true,
                  "type" : "pattern",
                  "pattern" : "<b>${entityName}</b><br/><br/><b>TimeStamp:</b> ${ts:7}",
                  "offsetX" : 0,
                  "offsetY" : -1
                },
                "click" : {
                  "type" : "doNothing"
                },
                "groups" : null,
                "edit" : {
                  "enabledActions" : [ "add", "edit", "move", "remove" ],
                  "attributeScope" : "SERVER_SCOPE",
                  "snappable" : false
                },
                "fillColor" : {
                  "type" : "constant",
                  "color" : "rgba(51,136,255,0.2)"
                },
                "strokeColor" : {
                  "type" : "constant",
                  "color" : "#3388ff"
                },
                "strokeWeight" : 3,
                "polygonKey" : {
                  "name" : "perimeter",
                  "label" : "perimeter",
                  "type" : "attribute",
                  "settings" : { },
                  "color" : "#2196f3"
                }
              } ],
              "circles" : [ ],
              "additionalDataSources" : [ ],
              "controlsPosition" : "topleft",
              "zoomActions" : [ "scroll", "doubleClick", "controlButtons" ],
              "scales" : [ "metric" ],
              "dragModeButton" : false,
              "fitMapBounds" : true,
              "useDefaultCenterPosition" : false,
              "defaultCenterPosition" : "49.348472, 32.108611",
              "defaultZoomLevel" : 14,
              "mapPageSize" : 16384,
              "mapActionButtons" : [ ],
              "background" : {
                "type" : "color",
                "color" : "#fff",
                "overlay" : {
                  "enabled" : false,
                  "color" : "rgba(255,255,255,0.72)",
                  "blur" : 3
                }
              },
              "padding" : "0"
            },
            "title" : "Map",
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showTitleIcon" : false,
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "widgetCss" : "",
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "configMode" : "basic",
            "titleFont" : null,
            "titleColor" : null,
            "margin" : "0px",
            "borderRadius" : "",
            "iconSize" : "24px",
            "titleIcon" : "map",
            "iconColor" : "#1F6BDD",
            "actions" : { },
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "f21e048f-cbeb-3a95-2751-e1afe17af804"
        },
        "59fbbebb-a7dc-8990-547c-8f0dc27738fa" : {
          "typeFullFqn" : "system.map",
          "type" : "latest",
          "sizeX" : 8.5,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1742909384356,
                  "endTimeMs" : 1742995784356
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgba(0, 0, 0, 0)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "mapType" : "geoMap",
              "layers" : [ {
                "label" : "{i18n:widgets.maps.layer.satellite}",
                "provider" : "openstreet",
                "layerType" : "Esri.WorldImagery"
              }, {
                "label" : "{i18n:widgets.maps.layer.hybrid}",
                "provider" : "openstreet",
                "layerType" : "Esri.WorldImagery",
                "referenceLayer" : "openstreetmap_hybrid"
              } ],
              "imageSource" : null,
              "markers" : [ {
                "dsType" : "entity",
                "dsLabel" : "",
                "dsDeviceId" : null,
                "dsEntityAliasId" : "61ca5437-6539-88f4-4f59-a9508eefdf1e",
                "dsFilterId" : null,
                "additionalDataKeys" : [ {
                  "name" : "type",
                  "type" : "entityField",
                  "label" : "type",
                  "color" : "#2196f3",
                  "settings" : { },
                  "_hash" : 0.5334895778829469,
                  "aggregationType" : null,
                  "units" : null,
                  "decimals" : null,
                  "funcBody" : null,
                  "usePostProcessing" : null,
                  "postFuncBody" : null
                }, {
                  "name" : "moisture",
                  "type" : "timeseries",
                  "label" : "moisture",
                  "color" : "#2196f3",
                  "settings" : { },
                  "_hash" : 0.8966400182081038
                } ],
                "label" : {
                  "show" : false,
                  "type" : "pattern",
                  "pattern" : "",
                  "patternFunction" : null
                },
                "tooltip" : {
                  "show" : false,
                  "trigger" : "click",
                  "autoclose" : true,
                  "type" : "pattern",
                  "pattern" : "",
                  "offsetX" : 0,
                  "offsetY" : -1,
                  "patternFunction" : null,
                  "tagActions" : null
                },
                "click" : {
                  "type" : "doNothing"
                },
                "groups" : null,
                "edit" : {
                  "enabledActions" : [ "move" ],
                  "attributeScope" : "SERVER_SCOPE",
                  "snappable" : false
                },
                "xKey" : {
                  "name" : "latitude",
                  "label" : "latitude",
                  "type" : "attribute",
                  "settings" : { },
                  "color" : "#2196f3"
                },
                "yKey" : {
                  "name" : "longitude",
                  "label" : "longitude",
                  "type" : "attribute",
                  "settings" : { },
                  "color" : "#2196f3"
                },
                "markerType" : "image",
                "markerShape" : {
                  "shape" : "markerShape1",
                  "size" : 34,
                  "color" : {
                    "type" : "constant",
                    "color" : "#307FE5"
                  }
                },
                "markerIcon" : {
                  "iconContainer" : "iconContainer1",
                  "icon" : "mdi:lightbulb-on",
                  "size" : 48,
                  "color" : {
                    "type" : "constant",
                    "color" : "#307FE5"
                  }
                },
                "markerImage" : {
                  "type" : "function",
                  "image" : "/assets/markers/shape1.svg",
                  "imageSize" : 34,
                  "imageFunction" : "var type = data['type'];\nif (type === 'SI Soil Moisture Sensor') {\n    var text = getSensorText();\n    var defaultMarkerWidth = 20;\n    var width = defaultMarkerWidth + getTextWidth(text);\n    var svgStr = getSensorSvg(width, text);\n    var encodedSvg = encodeURIComponent(svgStr);\n    var svgUrl = 'data:image/svg+xml,' + encodedSvg;\n    return {\n        url: svgUrl,\n        size: width,\n        markerOffset: [defaultMarkerWidth / 2, defaultMarkerWidth / 2],\n        tooltipOffset: [width * 0.5 - defaultMarkerWidth / 2, - (defaultMarkerWidth / 2)]\n    };\n} else {\n    return null;\n}\n\nfunction getSensorSvg(width, text) {\n    var color = '#FFFFFF';\n    var background = getSensorBackground(color, width);\n    var svgWidth = width;\n    var svgHeight = 20;\n    var opacity = 1;\n    var sensorSvg = '<svg opacity=\"' + opacity + '\" width=\"' + svgWidth + '\" height=\"' + svgHeight + '\" viewBox=\"0 0 ' + svgWidth + ' ' + svgHeight + '\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">' +\n                    background;\n    if (text !== '') {\n        var transform = '8 0';\n        sensorSvg += '<text transform=\"translate(' + transform + ')\" fill=\"black\" xml:space=\"preserve\" style=\"white-space: pre\" font-family=\"Roboto\" font-size=\"12\" font-weight=\"600\" letter-spacing=\"0em\"><tspan x=\"0.10664\" y=\"14.2637\">' + text + '</tspan></text>';\n    }\n    sensorSvg += '</svg>';\n    return sensorSvg;    \n}\n\nfunction getSensorBackground(color, width) {\n     if (width === 20) {\n         return '<circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"'+ color +'\"/>';\n     } else {\n         return '<circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"'+ color +'\"/>' + \n                '<circle cx=\"' + (width - 35) + '\" cy=\"10\" r=\"10\" fill=\"'+ color +'\"/>' +\n                '<rect x=\"10\" y=\"0\" width=\"' + (width - 45) + '\" height=\"20\" rx=\"1\" fill=\"'+ color +'\"/>';\n     }\n}\n\nfunction getSensorText() {\n    if (data['moisture']) {\n        var moisture = Number(data['moisture']);\n        return moisture + '%';\n    } else {\n        return '';\n    }\n}\n\nfunction getTextWidth(text) {\n    var width = 0;\n    for (var i = 0; i < text.length; i++) {\n        var charWidth;\n        var character = text.charAt(i);\n        if (character === ' ') {\n            charWidth = 8;\n        } else if (character === '-') {\n            charWidth = 7;\n        } else if (character === '°') {\n            charWidth = 5;\n        } else if (!isNaN(character * 1)){\n            charWidth = 9;\n        } else {\n            // Upper case\n            if (character === character.toUpperCase()) {\n                charWidth = 12;\n            // Lower case    \n            } else {\n                charWidth = 10;\n            }\n        }\n        width += charWidth;\n    }\n    return width;\n}",
                  "images" : null
                },
                "markerOffsetX" : 0.5,
                "markerOffsetY" : 1,
                "markerClustering" : {
                  "enable" : false,
                  "zoomOnClick" : true,
                  "maxZoom" : null,
                  "maxClusterRadius" : 80,
                  "zoomAnimation" : true,
                  "showCoverageOnHover" : true,
                  "spiderfyOnMaxZoom" : false,
                  "chunkedLoad" : false,
                  "lazyLoad" : true,
                  "useClusterMarkerColorFunction" : false,
                  "clusterMarkerColorFunction" : null
                }
              } ],
              "polygons" : [ {
                "dsType" : "entity",
                "dsLabel" : "",
                "polygonKey" : {
                  "name" : "perimeter",
                  "label" : "perimeter",
                  "type" : "attribute",
                  "settings" : { },
                  "color" : "#2196f3"
                },
                "fillColor" : {
                  "type" : "constant",
                  "color" : "rgba(51,136,255,0.2)"
                },
                "strokeColor" : {
                  "type" : "constant",
                  "color" : "#3388ff"
                },
                "strokeWeight" : 3,
                "label" : {
                  "show" : false,
                  "type" : "pattern",
                  "pattern" : "${entityName}"
                },
                "tooltip" : {
                  "show" : false,
                  "trigger" : "click",
                  "autoclose" : true,
                  "type" : "pattern",
                  "pattern" : "<b>${entityName}</b><br/><br/><b>TimeStamp:</b> ${ts:7}",
                  "offsetX" : 0,
                  "offsetY" : -1
                },
                "click" : {
                  "type" : "doNothing"
                },
                "edit" : {
                  "enabledActions" : [ ],
                  "attributeScope" : "SERVER_SCOPE",
                  "snappable" : false
                },
                "dsEntityAliasId" : "7473a7a0-136a-63da-f2ca-f249a1336745"
              } ],
              "circles" : [ ],
              "additionalDataSources" : [ ],
              "controlsPosition" : "topleft",
              "zoomActions" : [ "scroll", "doubleClick", "controlButtons" ],
              "scales" : [ "metric" ],
              "dragModeButton" : false,
              "fitMapBounds" : true,
              "useDefaultCenterPosition" : false,
              "defaultCenterPosition" : "49.348472, 32.108611",
              "defaultZoomLevel" : 15,
              "mapPageSize" : 16384,
              "mapActionButtons" : [ ],
              "background" : {
                "type" : "color",
                "color" : "#fff",
                "overlay" : {
                  "enabled" : false,
                  "color" : "rgba(255,255,255,0.72)",
                  "blur" : 3
                }
              },
              "padding" : "0"
            },
            "title" : "Map",
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showTitleIcon" : false,
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "widgetCss" : "",
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "configMode" : "basic",
            "titleFont" : null,
            "titleColor" : null,
            "margin" : "0px",
            "borderRadius" : "",
            "iconSize" : "24px",
            "titleIcon" : "map",
            "iconColor" : "#1F6BDD",
            "actions" : { },
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "59fbbebb-a7dc-8990-547c-8f0dc27738fa"
        },
        "0e4ab125-4929-7326-a8f1-5ed77c059cd3" : {
          "type" : "latest",
          "sizeX" : 5,
          "sizeY" : 3.5,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1682928998568,
                  "endTimeMs" : 1683015398568
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 2500
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "useMarkdownTextFunction" : true,
              "markdownTextPattern" : "# Markdown/HTML card \\n - **Current entity**: **${entityName}**. \\n - **Current value**: **${Random}**.",
              "markdownTextFunction" : "var dashboardPage = $('.tb-dashboard-page')[0];\n\nreturn `\n<div class=\"header\" style=\"display: flex; justify-content: space-between; align-items: center; padding: 10px;\">\n  \n  <!-- Left: Logo -->\n  <div class=\"logo\">\n    <img src=\"https://static.wixstatic.com/media/1c6450_dce73556084e449a8bc191739a3f51d7~mv2.png/v1/fill/w_259,h_60,al_c,q_85,usm_0.66_1.00_0.01,enc_avif,quality_auto/1c6450_dce73556084e449a8bc191739a3f51d7~mv2.png\" alt=\"Logo\" height=\"40\" />\n  </div>\n\n  <!-- Center: Title -->\n  <div class=\"title\" style=\"text-align: center; font-size: 18px; font-weight: 500;\">\n    <span style=\"font-size: 14px; font-weight: normal;\">Powered by Nibiaa Devices IoT platform.</span>\n  </div>\n\n  <!-- Right: Buttons -->\n  <div class=\"button-group\" style=\"display: flex; gap: 10px; align-items: center;\">\n    <button class=\"btn\" id=\"Subscription\" matTooltip=\"Subscribe\" type=\"button\" mat-flat-button color=\"primary\">Subscribe Now</button>\n    <button class=\"btn\" id=\"support\" matTooltip=\"Support\" type=\"button\" mat-flat-button color=\"primary\">Contact Us</button>\n  </div>\n</div>\n`;\n",
              "applyDefaultMarkdownStyle" : false,
              "markdownCss" : ".header {\n    height: 100%;\n    padding: 0 0 0 24px;\n} \n\n.header .title {\n    font-size: 24px;\n    font-weight: 500;\n    color: #28232D;\n}\n\n.header .logo .icon {\n    height: 60px;\n}\n\n.header .subtitle {\n    font-size: 13px;\n    font-weight: normal;\n    color: #757575;\n}\n\n.header .title .powered-by {\n    color: #0c8266;\n    font-size: 35px;\n}\n\n.button-group {\n    display: flex;\n    gap: 10px;\n    padding-right: 10px;\n}\n\n.btn {\n    background-color: #FFA500;\n    color: black;\n    padding: 10px 14px;\n    border: none;\n    cursor: pointer;\n    transition: background-color 0.5s ease, color 0.3s ease, transform 0.5s ease;\n    font-weight: 500;\n    border-radius: 4px;\n}\n\n.btn:hover {\n    background-color: #ff8800;\n    color: white;\n    transform: scale(1.1);\n}\n"
            },
            "title" : "New Markdown/HTML Card",
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : true,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "showLegend" : false,
            "widgetCss" : ".tb-markdown-view a:hover {\n    text-decoration: none;\n}",
            "noDataDisplayMessage" : "",
            "actions" : {
              "elementClick" : [ {
                "name" : "Subscription",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "subscription",
                "setEntityId" : true,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "33a15739-66aa-be8b-5142-6c4cf0b56117"
              }, {
                "name" : "support",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "contact",
                "setEntityId" : true,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "popoverPreferredPlacement" : "top",
                "popoverHideOnClickOutside" : true,
                "popoverHideDashboardToolbar" : true,
                "popoverWidth" : "11.8in",
                "popoverHeight" : "7in",
                "popoverStyle" : { },
                "openInSeparateDialog" : false,
                "openInPopover" : true,
                "id" : "a237469a-9e0e-3eca-2734-b0f2604a1bcb"
              } ],
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "pageSize" : 1024,
            "borderRadius" : "8px"
          },
          "row" : 0,
          "col" : 0,
          "id" : "0e4ab125-4929-7326-a8f1-5ed77c059cd3",
          "typeFullFqn" : "system.cards.markdown_card"
        },
        "ebba6414-4895-c6e6-d251-413d2db3b98a" : {
          "type" : "static",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class='card'>\r\n    <marquee behavior=\"scroll\" direction=\"left\">\r\n        Welcome to the Smart Mall Personnel Tracking Dashboard – Demo Version. This dashboard operates in a simulated environment built for demonstration purposes only. All personnel data, including location, movement, status, and alerts, is mock data and does not represent real individuals or operational activity. The interface showcases key features such as real-time staff tracking, zone-based presence monitoring, shift activity insights, and emergency alerting – all tailored for mall security and operations optimization. For live deployment, integration assistance, or further information, please contact our support team. Thank you for exploring our intelligent personnel monitoring system.\r\n    </marquee>\r\n</div>\r\n",
              "cardCss" : ".card {\n    font-weight: bold;\n    background: linear-gradient(to right, #a4c8e1, #e0f7fa);\n    /*box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);*/\n    font-size: 20px;\n    color:#333;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n\n    .card marquee {\n        font-size: 18px;\n        font-weight: bold;\n        animation: pulse 1.5s infinite;\n        letter-spacing: 1px;\n    }\n\n    .card a {\n        color: #ffdf00; /* Gold color for the link */\n        font-weight: bold;\n        text-decoration: none;\n    }\n\n    .card a:hover {\n        text-decoration: underline;\n    }\n\n    /* Animation for glowing text */\n    @keyframes pulse {\n         0% {\n            text-shadow: 0 0 5px rgba(255, 255, 255, 0.5), 0 0 10px rgba(255, 255, 255, 0.4), 0 0 20px rgba(255, 255, 255, 0.2);\n        }\n        50% {\n            text-shadow: 0 0 20px rgba(255, 255, 255, 0.7), 0 0 30px rgba(255, 255, 255, 0.5), 0 0 40px rgba(255, 255, 255, 0.4);\n        }\n        100% {\n            text-shadow: 0 0 5px rgba(255, 255, 255, 0.5), 0 0 10px rgba(255, 255, 255, 0.4), 0 0 20px rgba(255, 255, 255, 0.2);\n        }\n    }\n\n    /* Smooth scrolling effect for marquee */\n    marquee {\n        scroll-behavior: smooth;\n        animation: scroll 20s linear infinite;\n    }\n\n\n"
            },
            "title" : "New HTML Card",
            "dropShadow" : true,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "margin" : "",
            "widgetStyle" : { },
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "showLegend" : false,
            "borderRadius" : "8px"
          },
          "row" : 0,
          "col" : 0,
          "id" : "ebba6414-4895-c6e6-d251-413d2db3b98a",
          "typeFullFqn" : "system.cards.html_card"
        },
        "7b75e759-6be4-d5c2-c06a-9cd18a01d920" : {
          "typeFullFqn" : "system.cards.html_card",
          "type" : "static",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "static",
              "name" : "function",
              "dataKeys" : [ {
                "name" : "f(x)",
                "type" : "function",
                "label" : "Random",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.15479322438769105,
                "funcBody" : "var value = prevValue + Math.random() * 100 - 50;\nvar multiplier = Math.pow(10, 2 || 0);\nvar value = Math.round(value * multiplier) / multiplier;\nif (value < -1000) {\n\tvalue = -1000;\n} else if (value > 1000) {\n\tvalue = 1000;\n}\nreturn value;"
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "",
            "settings" : {
              "cardHtml" : "<div \r\n id=\"zf-widget-root-id-6h54xiimr\"\r\n data-pricing-table=\"true\"\r\n data-digest=\"2-54537ebf1e718ce1195ee3642eed0b590edfd1405accd976c3ae7227cb262322997acd6293236d11b737c2b253195bdf6ac8c289fee23864b1f0d0d6c9a2ea8c\" \r\n data-product_url=\"https://billing.zoho.in\">\r\n </div>\r\n <script src=\"https://js.zohostatic.com/books/zfwidgets/assets/js/zf-widget.js\"></script>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
            },
            "title" : "HTML Card",
            "dropShadow" : true,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "borderRadius" : "8px",
            "widgetStyle" : { },
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "7b75e759-6be4-d5c2-c06a-9cd18a01d920"
        },
        "9f5cae8e-f52e-5167-882c-66e6319a215c" : {
          "type" : "latest",
          "sizeX" : 5,
          "sizeY" : 3.5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "entityAliasId" : "3d22c76d-e784-1800-53d2-cb3724368c3d",
              "dataKeys" : [ ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1682928998568,
                  "endTimeMs" : 1683015398568
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 2500
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "useMarkdownTextFunction" : true,
              "markdownTextPattern" : "# Markdown/HTML card \\n - **Current entity**: **${entityName}**. \\n - **Current value**: **${Random}**.",
              "markdownTextFunction" : "\nvar dashboardPage = $('.tb-dashboard-page')[0];\n\n\n\nreturn '<div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"8px\">' +\n        '<div fxLayout=\"column\" fxLayoutAlign=\"center\"><button id=\"go-back\" matTooltip=\"Go back\" type=\"button\" mat-icon-button><mat-icon>arrow_back</mat-icon></button></div>' +\n        '<div fxFlex fxLayout=\"column\" fxLayoutAlign=\"center\">' +\n           \n          \n        '</div>' +\n       \n'</div>';\n",
              "applyDefaultMarkdownStyle" : false,
              "markdownCss" : ".header {\n    height: 100%;\n    padding: 0 0 0 16px;\n} \n\n.header .mat-icon.title-icon {\n    width: 40px;\n    height: 40px;\n}\n\n.header .title {\n    font-size: 18px;\n    font-weight: 500;\n    color: #28232D;\n}\n\n.header .subtitle {\n    font-size: 13px;\n    font-weight: normal;\n    color: #757575;\n}\n"
            },
            "title" : "New Markdown/HTML Card",
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : true,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "showLegend" : false,
            "widgetCss" : "",
            "noDataDisplayMessage" : "",
            "actions" : {
              "elementClick" : [ {
                "name" : "go-back",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "custom",
                "customFunction" : "widgetContext.stateController.navigatePrevState(0);",
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "fd666ec9-cd5a-af01-47e1-b7e53911f87a"
              } ]
            },
            "enableDataExport" : false,
            "pageSize" : 1024,
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "borderRadius" : "8px"
          },
          "row" : 0,
          "col" : 0,
          "id" : "9f5cae8e-f52e-5167-882c-66e6319a215c",
          "typeFullFqn" : "system.cards.markdown_card"
        },
        "8249006b-0c4a-26bb-54b4-06e161ea2d15" : {
          "typeFullFqn" : "system.cards.html_card",
          "type" : "static",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "static",
              "name" : "function",
              "dataKeys" : [ {
                "name" : "f(x)",
                "type" : "function",
                "label" : "Random",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.15479322438769105,
                "funcBody" : "var value = prevValue + Math.random() * 100 - 50;\nvar multiplier = Math.pow(10, 2 || 0);\nvar value = Math.round(value * multiplier) / multiplier;\nif (value < -1000) {\n\tvalue = -1000;\n} else if (value > 1000) {\n\tvalue = 1000;\n}\nreturn value;"
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<script src=\"https://desk.zoho.in/portal/api/feedbackwidget/193806000000404537?orgId=60039707933&displayType=iframe\"></script>\n<iframe id=\"zsfeedbackFrame\" width=\"890\" height=\"570\" name=\"zsfeedbackFrame\" scrolling=\"no\" allowtransparency=\"false\" frameborder=\"0\" border=\"0\" src=\"https://desk.zoho.in/support/fbw?formType=AdvancedWebForm&fbwId=edbsn40e5ca0c6b5991d80b2c1f27dceb37d2d5862ff32fb11aea1bfda1eedf842242&xnQsjsdp=edbsn3f460b19ceae96909cadd5080a4669bc&mode=showNewWidget&displayType=iframe\"></iframe>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
            },
            "title" : "HTML Card",
            "dropShadow" : true,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "8249006b-0c4a-26bb-54b4-06e161ea2d15"
        },
        "4db0a51b-c910-9bce-e40f-011a678362d9" : {
          "typeFullFqn" : "system.indoor_temperature_card",
          "type" : "latest",
          "sizeX" : 3,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : "",
              "entityAliasId" : "39927380-423a-872a-0843-de34f99264ad",
              "dataKeys" : [ {
                "name" : "personnelCount",
                "type" : "attribute",
                "label" : "Active Personnel",
                "color" : "#CCACE7",
                "settings" : { },
                "_hash" : 0.9490953329194904,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1752658851606,
                  "endTimeMs" : 1752745251606
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgba(0, 0, 0, 0)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "layout" : "square",
              "autoScale" : true,
              "showLabel" : true,
              "labelFont" : {
                "family" : "Roboto",
                "size" : 16,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "500",
                "lineHeight" : "1.5"
              },
              "labelColor" : {
                "type" : "constant",
                "color" : "rgba(0, 0, 0, 0.87)",
                "colorFunction" : "var temperature = value;\nif (typeof temperature !== undefined) {\n  var percent = (temperature + 60)/120 * 100;\n  return tinycolor.mix('blue', 'red', percent).toHexString();\n}\nreturn 'blue';"
              },
              "showIcon" : true,
              "iconSize" : 40,
              "iconSizeUnit" : "px",
              "icon" : "mdi:account-hard-hat",
              "iconColor" : {
                "type" : "constant",
                "color" : "rgb(231, 223, 153)",
                "colorFunction" : "var temperature = value;\nif (typeof temperature !== undefined) {\n  var percent = (temperature + 60)/120 * 100;\n  return tinycolor.mix('blue', 'red', percent).toHexString();\n}\nreturn 'blue';",
                "gradient" : {
                  "advancedMode" : false,
                  "gradient" : [ "rgba(0, 255, 0, 1)", "rgba(255, 0, 0, 1)" ],
                  "gradientAdvanced" : [ {
                    "source" : {
                      "type" : "constant"
                    },
                    "color" : "rgba(0, 255, 0, 1)"
                  }, {
                    "source" : {
                      "type" : "constant"
                    },
                    "color" : "rgba(255, 0, 0, 1)"
                  } ],
                  "minValue" : 0,
                  "maxValue" : 100
                },
                "rangeList" : {
                  "advancedMode" : false,
                  "range" : [ {
                    "from" : null,
                    "to" : 18,
                    "color" : "#234CC7"
                  }, {
                    "from" : 18,
                    "to" : 24,
                    "color" : "#3FA71A"
                  }, {
                    "from" : 24,
                    "to" : null,
                    "color" : "#D81838"
                  } ]
                }
              },
              "valueFont" : {
                "family" : "Roboto",
                "size" : 52,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "500",
                "lineHeight" : "100%"
              },
              "valueColor" : {
                "type" : "range",
                "color" : "rgba(0, 0, 0, 0.87)",
                "colorFunction" : "var temperature = value;\nif (typeof temperature !== undefined) {\n  var percent = (temperature + 60)/120 * 100;\n  return tinycolor.mix('blue', 'red', percent).toHexString();\n}\nreturn 'blue';",
                "rangeList" : {
                  "advancedMode" : false,
                  "range" : [ {
                    "from" : null,
                    "to" : 18,
                    "color" : "#234CC7"
                  }, {
                    "from" : 18,
                    "to" : 24,
                    "color" : "#3FA71A"
                  }, {
                    "from" : 24,
                    "to" : null,
                    "color" : "#D81838"
                  } ]
                }
              },
              "showDate" : true,
              "dateFormat" : {
                "format" : null,
                "lastUpdateAgo" : true,
                "custom" : false,
                "auto" : false
              },
              "dateFont" : {
                "family" : "Roboto",
                "size" : 12,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "500",
                "lineHeight" : "1.33"
              },
              "dateColor" : {
                "type" : "constant",
                "color" : "rgba(0, 0, 0, 0.38)",
                "colorFunction" : "var temperature = value;\nif (typeof temperature !== undefined) {\n  var percent = (temperature + 60)/120 * 100;\n  return tinycolor.mix('blue', 'red', percent).toHexString();\n}\nreturn 'blue';"
              },
              "background" : {
                "type" : "color",
                "color" : "#fff",
                "overlay" : {
                  "enabled" : false,
                  "color" : "rgba(255,255,255,0.72)",
                  "blur" : 3
                }
              },
              "padding" : "0"
            },
            "title" : "Temperature card",
            "dropShadow" : true,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "units" : "",
            "decimals" : 0,
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "configMode" : "advanced",
            "displayTimewindow" : true,
            "margin" : "0px",
            "borderRadius" : "8px",
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "showTitleIcon" : false,
            "titleTooltip" : "",
            "titleFont" : {
              "size" : 12,
              "sizeUnit" : "px",
              "family" : null,
              "weight" : null,
              "style" : null,
              "lineHeight" : "1.6"
            },
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "14px",
            "timewindowStyle" : {
              "showIcon" : true,
              "iconSize" : "14px",
              "icon" : "query_builder",
              "iconPosition" : "left",
              "font" : {
                "size" : 12,
                "sizeUnit" : "px",
                "family" : null,
                "weight" : null,
                "style" : null,
                "lineHeight" : "1"
              },
              "color" : null
            },
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "4db0a51b-c910-9bce-e40f-011a678362d9"
        },
        "11f6332b-96a9-a7e2-382b-c0661dfff5ca" : {
          "typeFullFqn" : "system.cards.html_card",
          "type" : "static",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "static",
              "name" : "function",
              "dataKeys" : [ {
                "name" : "f(x)",
                "type" : "function",
                "label" : "Random",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.15479322438769105,
                "funcBody" : "var value = prevValue + Math.random() * 100 - 50;\nvar multiplier = Math.pow(10, 2 || 0);\nvar value = Math.round(value * multiplier) / multiplier;\nif (value < -1000) {\n\tvalue = -1000;\n} else if (value > 1000) {\n\tvalue = 1000;\n}\nreturn value;"
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<iframe frameborder=\"0\" id=\"iframewin\" width=\"100%\" height=\"100%\" src=\"https://fcszw-zc1.maillist-manage.in/ua/Optin?od=1a1e3dbbf1c9a&zx=1dfa80dd9f&tD=133bf6a6558cfa49&sD=133bf6a6559059bc\"></iframe>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
            },
            "title" : "HTML Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "11f6332b-96a9-a7e2-382b-c0661dfff5ca"
        },
        "35b78786-542f-506a-6a74-227a97374b51" : {
          "typeFullFqn" : "system.pie",
          "type" : "latest",
          "sizeX" : 5,
          "sizeY" : 4,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : "",
              "entityAliasId" : "39927380-423a-872a-0843-de34f99264ad",
              "dataKeys" : [ {
                "name" : "disturbance",
                "type" : "attribute",
                "label" : "Disturbance",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5476418387292825,
                "aggregationType" : null,
                "units" : "%",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "medical",
                "type" : "attribute",
                "label" : "Medical",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5475033813960285,
                "aggregationType" : null,
                "units" : "%",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "suspicious",
                "type" : "attribute",
                "label" : "Suspicious Activity",
                "color" : "#F4D936",
                "settings" : { },
                "_hash" : 0.2473405894322217,
                "aggregationType" : null,
                "units" : "%",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "other",
                "type" : "attribute",
                "label" : "Other",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.5464780536710074,
                "aggregationType" : null,
                "units" : "%",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "theft",
                "type" : "attribute",
                "label" : "Theft",
                "color" : "#E5415E",
                "settings" : { },
                "_hash" : 0.9043008627768712,
                "aggregationType" : null,
                "units" : "%",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1752991028001,
                  "endTimeMs" : 1753077428001
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgba(0, 0, 0, 0)",
            "color" : null,
            "padding" : "0px",
            "settings" : {
              "sortSeries" : false,
              "animation" : {
                "animation" : true,
                "animationThreshold" : 2013,
                "animationDuration" : 1012,
                "animationEasing" : "quadraticIn",
                "animationDelay" : 0,
                "animationDurationUpdate" : 500,
                "animationEasingUpdate" : "exponentialIn",
                "animationDelayUpdate" : 0
              },
              "showLegend" : false,
              "legendPosition" : "bottom",
              "legendLabelFont" : {
                "family" : "Roboto",
                "size" : 12,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "400",
                "lineHeight" : "16px"
              },
              "legendLabelColor" : "rgba(0, 0, 0, 0.38)",
              "legendValueFont" : {
                "family" : "Roboto",
                "size" : 14,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "500",
                "lineHeight" : "20px"
              },
              "legendValueColor" : "rgba(0, 0, 0, 0.87)",
              "showTooltip" : true,
              "tooltipValueType" : "percentage",
              "tooltipValueDecimals" : 0,
              "tooltipValueFont" : {
                "family" : "Roboto",
                "size" : 13,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "500",
                "lineHeight" : "16px"
              },
              "tooltipValueColor" : "rgba(0, 0, 0, 0.76)",
              "tooltipBackgroundColor" : "rgba(255, 255, 255, 0.76)",
              "tooltipBackgroundBlur" : 4,
              "background" : {
                "type" : "color",
                "color" : "#fff",
                "overlay" : {
                  "enabled" : false,
                  "color" : "rgba(255,255,255,0.72)",
                  "blur" : 3
                }
              },
              "padding" : "12px",
              "showLabel" : true,
              "labelPosition" : "outside",
              "labelFont" : {
                "family" : "Roboto",
                "size" : 12,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "normal",
                "lineHeight" : "1.2"
              },
              "labelColor" : "#000",
              "borderWidth" : 0,
              "borderColor" : "#000",
              "radius" : 80,
              "clockwise" : false
            },
            "title" : "Zonal Incident Distribution",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "units" : null,
            "decimals" : 0,
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "headerButton" : [ ]
            },
            "configMode" : "advanced",
            "displayTimewindow" : true,
            "margin" : "0px",
            "borderRadius" : "8px",
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "showTitleIcon" : false,
            "titleTooltip" : "",
            "titleFont" : {
              "size" : 16,
              "sizeUnit" : "px",
              "family" : null,
              "weight" : "bold",
              "style" : "oblique",
              "lineHeight" : "24px"
            },
            "titleIcon" : "pie_chart",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "timewindowStyle" : {
              "showIcon" : false,
              "iconSize" : "24px",
              "icon" : null,
              "iconPosition" : "left",
              "font" : {
                "size" : 12,
                "sizeUnit" : "px",
                "family" : "Roboto",
                "weight" : "400",
                "style" : "normal",
                "lineHeight" : "16px"
              },
              "color" : "rgba(0, 0, 0, 0.38)",
              "displayTypePrefix" : true
            },
            "enableDataExport" : false,
            "titleColor" : null
          },
          "row" : 0,
          "col" : 0,
          "id" : "35b78786-542f-506a-6a74-227a97374b51"
        }
      },
      "states" : {
        "default" : {
          "name" : "Smart Mall Personnel Tracking",
          "root" : true,
          "layouts" : {
            "main" : {
              "widgets" : {
                "8ce15aad-9ab2-55ce-2628-a663814d27b1" : {
                  "sizeX" : 17,
                  "sizeY" : 5,
                  "row" : 2,
                  "col" : 12,
                  "mobileOrder" : 3,
                  "mobileHeight" : 5,
                  "resizable" : true
                },
                "84801b7f-bcd4-9658-65bc-b753bee0df9c" : {
                  "sizeX" : 17,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 4,
                  "row" : 7,
                  "col" : 12,
                  "resizable" : true
                },
                "ba981af4-bfce-68cd-cc3e-3dd4115614ed" : {
                  "sizeX" : 12,
                  "sizeY" : 11,
                  "mobileOrder" : 2,
                  "mobileHeight" : 5,
                  "resizable" : true,
                  "row" : 2,
                  "col" : 0
                },
                "0e4ab125-4929-7326-a8f1-5ed77c059cd3" : {
                  "sizeX" : 29,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "resizable" : true,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "ebba6414-4895-c6e6-d251-413d2db3b98a" : {
                  "sizeX" : 29,
                  "sizeY" : 1,
                  "row" : 13,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#f9fafe",
                "columns" : 24,
                "margin" : 10,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "field" : {
          "name" : "${entityName}",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "8fcd3aed-58d0-0cad-cf63-3a08e1be40a9" : {
                  "sizeX" : 13,
                  "sizeY" : 12,
                  "row" : 10,
                  "col" : 0,
                  "mobileOrder" : 6,
                  "mobileHeight" : 4,
                  "resizable" : true
                },
                "fd1083dd-fad3-90c3-8eba-8a8fe0f1d93e" : {
                  "sizeX" : 14,
                  "sizeY" : 4,
                  "row" : 6,
                  "col" : 0,
                  "mobileOrder" : 3,
                  "resizable" : true,
                  "mobileHeight" : 2
                },
                "e18122c8-7973-5206-792a-cfa7f924a7b0" : {
                  "sizeX" : 16,
                  "sizeY" : 12,
                  "row" : 10,
                  "col" : 13,
                  "mobileOrder" : 7,
                  "resizable" : true,
                  "mobileHeight" : 4
                },
                "aaccdb0d-72ff-9f2c-e4ae-55077480a3e6" : {
                  "sizeX" : 14,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "resizable" : true
                },
                "2dc3be15-d850-c363-6c49-e511d3778510" : {
                  "sizeX" : 7,
                  "sizeY" : 4,
                  "row" : 2,
                  "col" : 7,
                  "mobileOrder" : 2,
                  "resizable" : true,
                  "mobileHeight" : 1
                },
                "3ae2cf24-0941-03fb-d93e-f25250bf5350" : {
                  "sizeX" : 21,
                  "sizeY" : 22,
                  "mobileOrder" : 5,
                  "resizable" : true,
                  "row" : 0,
                  "col" : 29,
                  "preserveAspectRatio" : false,
                  "mobileHeight" : 5
                },
                "4db0a51b-c910-9bce-e40f-011a678362d9" : {
                  "sizeX" : 7,
                  "sizeY" : 4,
                  "row" : 2,
                  "col" : 0,
                  "resizable" : true,
                  "mobileOrder" : 3,
                  "mobileHeight" : 2
                },
                "35b78786-542f-506a-6a74-227a97374b51" : {
                  "sizeX" : 15,
                  "sizeY" : 10,
                  "row" : 0,
                  "col" : 14,
                  "resizable" : true,
                  "mobileOrder" : 4,
                  "mobileHeight" : 4
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#f9fafe",
                "columns" : 48,
                "margin" : 10,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "setup_field_polygon" : {
          "name" : "Setup field polygon",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f21e048f-cbeb-3a95-2751-e1afe17af804" : {
                  "sizeX" : 24,
                  "sizeY" : 10,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#ffffff",
                "columns" : 24,
                "margin" : 0,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : true,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "setup_sensor_location" : {
          "name" : "Setup Sensor Location",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "59fbbebb-a7dc-8990-547c-8f0dc27738fa" : {
                  "sizeX" : 24,
                  "sizeY" : 10,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#ffffff",
                "columns" : 24,
                "margin" : 0,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : true,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "moisture_sensor_details" : {
          "name" : "Moisture sensor details",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "1f66e5cb-041d-1a45-1abf-6f6ae3d91872" : {
                  "sizeX" : 24,
                  "sizeY" : 11,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#ffffff",
                "columns" : 24,
                "margin" : 0,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : true,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "moisture_sensor_details_brief" : {
          "name" : "Moisture sensor details brief",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "b5c71687-c799-9b94-00f1-958cf76f006c" : {
                  "sizeX" : 24,
                  "sizeY" : 11,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#ffffff",
                "columns" : 24,
                "margin" : 0,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : true,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "field_alarms" : {
          "name" : "Field Alarms",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "2dcc4fce-85e4-e67d-4467-7bd38e579c5c" : {
                  "sizeX" : 24,
                  "sizeY" : 11,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#ffffff",
                "columns" : 24,
                "margin" : 0,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : true,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "moisture_sensor_details_moisture" : {
          "name" : "Moisture sensor details moisture",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f99ce7c5-d0b0-0292-d803-78aba8ba3b31" : {
                  "sizeX" : 24,
                  "sizeY" : 11,
                  "mobileOrder" : 0,
                  "mobileHeight" : 4,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#ffffff",
                "columns" : 24,
                "margin" : 0,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : true,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "moisture_sensor_details_alarms" : {
          "name" : "Moisture sensor details alarms",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "aac826ba-ba9f-7e72-752f-3a0a6b9cddb5" : {
                  "sizeX" : 24,
                  "sizeY" : 9,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#ffffff",
                "columns" : 24,
                "margin" : 0,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : true,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "sensor_alarms" : {
          "name" : "Sensor alarms",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "8923d335-d974-2aaa-8c40-3eafec174a58" : {
                  "sizeX" : 24,
                  "sizeY" : 11,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#ffffff",
                "columns" : 24,
                "margin" : 0,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : true,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "subscription" : {
          "name" : "subscription",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "7b75e759-6be4-d5c2-c06a-9cd18a01d920" : {
                  "sizeX" : 26,
                  "sizeY" : 19,
                  "row" : 1,
                  "col" : 0
                },
                "9f5cae8e-f52e-5167-882c-66e6319a215c" : {
                  "sizeX" : 26,
                  "sizeY" : 1,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "layoutType" : "default",
                "backgroundColor" : "#eeeeee",
                "columns" : 24,
                "margin" : 10,
                "outerMargin" : true,
                "backgroundSizeMode" : "100%"
              }
            }
          }
        },
        "support" : {
          "name" : "support",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "8249006b-0c4a-26bb-54b4-06e161ea2d15" : {
                  "sizeX" : 24,
                  "sizeY" : 10,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "layoutType" : "default",
                "backgroundColor" : "#eeeeee",
                "columns" : 24,
                "margin" : 10,
                "outerMargin" : false,
                "backgroundSizeMode" : "100%",
                "minColumns" : 24,
                "viewFormat" : "grid",
                "autoFillHeight" : false,
                "rowHeight" : 70,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70
              }
            }
          }
        },
        "contact" : {
          "name" : "contact",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "11f6332b-96a9-a7e2-382b-c0661dfff5ca" : {
                  "sizeX" : 24,
                  "sizeY" : 11,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "layoutType" : "default",
                "backgroundColor" : "#eeeeee",
                "columns" : 24,
                "margin" : 10,
                "outerMargin" : false,
                "backgroundSizeMode" : "100%",
                "minColumns" : 24,
                "viewFormat" : "grid",
                "autoFillHeight" : true,
                "rowHeight" : 70,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70
              }
            }
          }
        }
      },
      "entityAliases" : {
        "cd737d26-3068-aae0-d370-c93f8e7e1a00" : {
          "id" : "cd737d26-3068-aae0-d370-c93f8e7e1a00",
          "alias" : "Fields",
          "filter" : {
            "type" : "assetType",
            "resolveMultiple" : true,
            "assetNameFilter" : "",
            "assetTypes" : [ "SI Field" ]
          }
        },
        "39927380-423a-872a-0843-de34f99264ad" : {
          "id" : "39927380-423a-872a-0843-de34f99264ad",
          "alias" : "Current field",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : null,
            "defaultStateEntity" : null
          }
        },
        "4ed5e77d-3c18-a442-e616-14f73013a686" : {
          "id" : "4ed5e77d-3c18-a442-e616-14f73013a686",
          "alias" : "Irrigation schedule",
          "filter" : {
            "type" : "schedulerEvent",
            "resolveMultiple" : true,
            "originatorStateEntity" : true,
            "stateEntityParamName" : null,
            "defaultStateEntity" : null,
            "originator" : null,
            "eventType" : "START_IRRIGATION"
          }
        },
        "aa55618a-278a-0776-832d-fa1fe5769a2a" : {
          "id" : "aa55618a-278a-0776-832d-fa1fe5769a2a",
          "alias" : "Moisture Sensors",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : null,
            "defaultStateEntity" : null,
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 1,
            "fetchLastLevelOnly" : false,
            "relationType" : null,
            "deviceTypes" : [ "SI Soil Moisture Sensor" ]
          }
        },
        "7473a7a0-136a-63da-f2ca-f249a1336745" : {
          "id" : "7473a7a0-136a-63da-f2ca-f249a1336745",
          "alias" : "Moisture Sensor Field",
          "filter" : {
            "type" : "assetSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : null,
            "defaultStateEntity" : null,
            "rootEntity" : null,
            "direction" : "TO",
            "maxLevel" : 1,
            "fetchLastLevelOnly" : false,
            "relationType" : null,
            "assetTypes" : [ "SI Field" ]
          }
        },
        "61ca5437-6539-88f4-4f59-a9508eefdf1e" : {
          "id" : "61ca5437-6539-88f4-4f59-a9508eefdf1e",
          "alias" : "Current sensor",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : null,
            "defaultStateEntity" : null
          }
        },
        "3d22c76d-e784-1800-53d2-cb3724368c3d" : {
          "id" : "3d22c76d-e784-1800-53d2-cb3724368c3d",
          "alias" : "Selected Supermarket",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "selectedSupermarket",
            "defaultStateEntity" : null
          }
        },
        "8640fe68-28dc-aeb3-9555-dc2af33976e5" : {
          "id" : "8640fe68-28dc-aeb3-9555-dc2af33976e5",
          "alias" : "s",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : null,
            "defaultStateEntity" : null
          }
        }
      },
      "filters" : { },
      "timewindow" : {
        "hideAggregation" : false,
        "hideAggInterval" : false,
        "hideTimezone" : false,
        "selectedTab" : 0,
        "realtime" : {
          "realtimeType" : 0,
          "timewindowMs" : 604800000,
          "quickInterval" : "CURRENT_DAY",
          "interval" : 1800000
        },
        "aggregation" : {
          "type" : "AVG",
          "limit" : 25000
        }
      },
      "settings" : {
        "stateControllerId" : "entity",
        "showTitle" : false,
        "showDashboardsSelect" : false,
        "showEntitiesSelect" : false,
        "showDashboardTimewindow" : false,
        "showDashboardExport" : false,
        "toolbarAlwaysOpen" : true,
        "titleColor" : "rgba(0,0,0,0.870588)",
        "showDashboardLogo" : false,
        "dashboardLogoUrl" : null,
        "hideToolbar" : false,
        "showFilters" : false,
        "showUpdateDashboardImage" : false,
        "dashboardCss" : ".tb-widget-container > .tb-widget {\n    border-radius: 8px;\n    box-shadow: 0px 4px 10px rgba(23, 33, 90, 0.08);\n}\n\n.tb-dashboard-page .tb-widget-container > .tb-widget {\n    color: #868D9C !important;\n}\n\n.tb-dashboard-page .tb-widget-container > .tb-widget .tb-table-widget .mat-mdc-table .mat-mdc-header-cell {\n    color: #868D9C !important;\n}\n\n.tb-dashboard-page .tb-widget-container > .tb-widget .tb-table-widget .mat-mdc-table .mat-mdc-cell {\n    color: #868D9C !important;\n}\n\n.tb-dashboard-page .tb-widget-container > .tb-widget .tb-table-widget .mat-mdc-table .mat-mdc-header-cell .mat-sort-header-arrow {\n    color: #868D9C !important;\n}\n\n.tb-dashboard-page .tb-widget-container > .tb-widget .tb-table-widget .mat-input-element::placeholder {\n    color: #868D9C !important;\n}\n\n.tb-dashboard-page .tb-widget-container > .tb-widget .tb-table-widget .mat-input-element::-moz-placeholder {\n    color: #868D9C !important;\n}\n\n.tb-dashboard-page .tb-widget-container > .tb-widget .tb-table-widget .mat-input-element::-webkit-input-placeholder {\n    color: #868D9C !important;\n}\n\n.tb-dashboard-page .tb-widget-container > .tb-widget .tb-table-widget .mat-input-element:-ms-input-placeholder {\n    color: #868D9C !important;\n}\n\n.tb-dashboard-page .tb-widget-container > .tb-widget .tb-table-widget .mat-mdc-table .mat-mdc-cell .mdc-checkbox__native-control:not(:indeterminate):not(:checked)~.mdc-checkbox__background, .tb-dashboard-page .tb-widget-container > .tb-widget .tb-table-widget .mat-mdc-table .mat-mdc-header-cell .mdc-checkbox__native-control:not(:indeterminate):not(:checked)~.mdc-checkbox__background {\n    border-color : #868D9C !important;\n}\n\n.tb-dashboard-page .tb-widget-container > .tb-widget .tb-table-widget .mat-mdc-table .mat-mdc-cell button.mat-mdc-icon-button mat-icon {\n    color: #868D9C !important;\n}\n\n.tb-dashboard-page .tb-widget-container > .tb-widget .tb-table-widget .mat-mdc-paginator {\n    color: #868D9C !important;\n}\n\n\n.tb-dashboard-page .tb-widget-container > .tb-widget .tb-table-widget .mat-mdc-paginator button.mat-mdc-icon-button {\n    color: #868D9C !important;\n}\n\n.tb-dashboard-page .tb-widget-container > .tb-widget .tb-table-widget .mat-mdc-paginator .mat-mdc-select-value {\n    color: #868D9C !important;\n}\n"
      }
    },
    "name" : "Personnel Tracking",
    "resources" : null,
    "assignedCustomers" : null,
    "customerId" : null,
    "externalId" : null,
    "id" : {
      "entityType" : "DASHBOARD",
      "id" : "90312890-6164-11f0-97de-d3f7e11b92e3"
    },
    "ownerId" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}